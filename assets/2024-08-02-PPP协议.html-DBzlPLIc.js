import{w as i,z as l,C as t,K as a,D as s,O as n}from"./app-L7YrSPTA.js";const p="/assets/postsimages/2024-08-02-PPP%E5%8D%8F%E8%AE%AE/01-PPP%E5%9C%A8%E5%8D%8F%E8%AE%AE%E6%A0%88%E4%B8%AD%E7%9A%84%E4%BD%8D%E7%BD%AE.jpeg",e="/assets/postsimages/2024-08-02-PPP%E5%8D%8F%E8%AE%AE/02-PPP%E5%B8%A7%E6%A0%BC%E5%BC%8F-LCP%E6%8A%A5%E6%96%87.jpeg",r="/assets/postsimages/2024-08-02-PPP%E5%8D%8F%E8%AE%AE/03-PPP%E8%BF%9E%E6%8E%A5%E5%BB%BA%E7%AB%8B%E8%BF%87%E7%A8%8B.jpeg",d="/assets/postsimages/2024-08-02-PPP%E5%8D%8F%E8%AE%AE/04-%E5%9C%BA%E6%99%AF1-LCP%E5%8D%8F%E5%95%86.jpeg",c="/assets/postsimages/2024-08-02-PPP%E5%8D%8F%E8%AE%AE/05-%E5%9C%BA%E6%99%AF2-%E6%A3%80%E6%B5%8B%E9%93%BE%E8%B7%AF%E7%8A%B6%E6%80%81.jpeg",o="/assets/postsimages/2024-08-02-PPP%E5%8D%8F%E8%AE%AE/06-%E5%9C%BA%E6%99%AF3-%E5%85%B3%E9%97%AD%E8%BF%9E%E6%8E%A5.jpeg",P="/assets/postsimages/2024-08-02-PPP%E5%8D%8F%E8%AE%AE/07-%E5%9C%BA%E6%99%AF4-LCP%E5%8D%8F%E5%95%86%E8%B6%85%E6%97%B6.jpeg",m="/assets/postsimages/2024-08-02-PPP%E5%8D%8F%E8%AE%AE/08-%E5%9C%BA%E6%99%AF5-LCP%E5%8F%82%E6%95%B0%E4%B8%8D%E4%B8%80%E8%87%B4%E9%87%8D%E6%96%B0%E5%8D%8F%E5%95%86.jpeg",u="/assets/postsimages/2024-08-02-PPP%E5%8D%8F%E8%AE%AE/09-%E5%9C%BA%E6%99%AF6-LCP%E5%8F%82%E6%95%B0%E4%B8%8D%E8%AF%86%E5%88%AB.jpeg",h="/assets/postsimages/2024-08-02-PPP%E5%8D%8F%E8%AE%AE/10-PAP%E9%AA%8C%E8%AF%81%E8%BF%87%E7%A8%8B.jpeg",v="/assets/postsimages/2024-08-02-PPP%E5%8D%8F%E8%AE%AE/11-PAP%E6%8A%A5%E6%96%87%E7%9A%84%E5%B8%A7%E6%A0%BC%E5%BC%8F.jpeg",g="/assets/postsimages/2024-08-02-PPP%E5%8D%8F%E8%AE%AE/12-CHAP%E9%AA%8C%E8%AF%81%E8%BF%87%E7%A8%8B.jpeg",b="/assets/postsimages/2024-08-02-PPP%E5%8D%8F%E8%AE%AE/13-CHAP%E9%AA%8C%E8%AF%81%E6%8A%A5%E6%96%87%E5%B8%A7%E6%A0%BC%E5%BC%8F.jpeg",C="/assets/postsimages/2024-08-02-PPP%E5%8D%8F%E8%AE%AE/14-NCP(IPCP)-%E9%9D%99%E6%80%81IP%E5%9C%B0%E5%9D%80%E5%8D%8F%E5%95%86.jpeg",f="/assets/postsimages/2024-08-02-PPP%E5%8D%8F%E8%AE%AE/15-NCP(IPCP)-%E5%8A%A8%E6%80%81IP%E5%9C%B0%E5%9D%80%E5%8D%8F%E5%95%86.jpeg",A="/assets/postsimages/2024-08-02-PPP%E5%8D%8F%E8%AE%AE/16-PPP%E7%9A%84%E9%AD%94%E6%9C%AF%E5%AD%97%E6%A0%A1%E9%AA%8C.jpeg",y="/assets/postsimages/2024-08-02-PPP%E5%8D%8F%E8%AE%AE/17-PPP%E5%8D%8F%E8%AE%AE%E5%8D%8F%E5%95%86%E9%9C%87%E8%8D%A1%E5%85%B3%E7%B3%BB%E5%9B%BE.jpeg",E="/assets/postsimages/2024-08-02-PPP%E5%8D%8F%E8%AE%AE/18-MP%E9%93%BE%E8%B7%AF.jpeg",x={},R=a('<h2 id="_1-ppp-简介" tabindex="-1"><a class="header-anchor" href="#_1-ppp-简介"><span>1. PPP 简介</span></a></h2><p>PPP（Point-to-Point Protocol）协议是一种点到点链路层协议，主要用于在全双工的同异步链路上进行点到点的数据传输。</p><p>PPP定义的协议组件包括：</p><ul><li>数据封装方式，定义封装多协议数据包的方法。</li><li>链路控制协议 LCP（Link Control Protocol），主要用来建立、监控和拆除数据链路。</li><li>网络层控制协议 NCP（Network Control Protocol），主要用来建立和配置不同的网络层协议，协商在该数据链路上所传输的数据包的格式与类型。</li></ul><p>同时，PPP还提供了用于网络安全方面的验证协议族 PAP（Password Authentication Protocol） 和 CHAP（Challenge Handshake Authentication Protocol），用于网络安全方面的验证。</p><p>当用户对带宽的要求较高时，单个的 PPP 链路无法提供足够的带宽，这时将多个 PPP 链路进行捆绑形成 MP 链路，旨在增加链路的带宽并增强链路可靠性。</p><h2 id="_2-ppp-的特点" tabindex="-1"><a class="header-anchor" href="#_2-ppp-的特点"><span>2. PPP 的特点</span></a></h2><p>PPP 协议处于 OSI（Open Systems Interconnection） 参考模型的第二层，主要用在支持全双工的同/异步链路上，进行点到点之间的数据传输。由于它能够提供用户验证，易于扩充，并且支持同/异步通信，因而获得广泛应用。</p><p>PPP 协议是在串行线 IP 协议 SLIP（Serial Line IP） 的基础上发展起来的。由于 SLIP 协议具有只支持异步传输方式、无协商过程（尤其不能协商如双方 IP 地址等网络层属性）、只能承载 IP 一种网络层报文等缺陷，在发展过程中，逐步被 PPP 协议所替代。</p><p>PPP 协议有如下优点：</p><ul><li>对物理层而言，PPP 既支持同步链路又支持异步链路，而 X.25 等数据链路层协议仅支持同步链路，SLIP 仅支持异步链路。</li><li>PPP 协议具有良好的扩展性。</li><li>提供 LCP（Link Control Protocol） 协议，用于各种链路层参数的协商。</li><li>提供各种 NCP（Network Control Protocol） 协议（如 IPCP、IPXCP），用于各网络层参数的协商，更好地支持了网络层协议。</li><li>提供认证协议 CHAP（Challenge-Handshake Authentication Protocol） 和 PAP（Password Authentication Protocol），更好地保证了网络的安全性。</li><li>无重传机制，网络开销小，速度快。</li></ul><h2 id="_3-ppp-的原理" tabindex="-1"><a class="header-anchor" href="#_3-ppp-的原理"><span>3. PPP 的原理</span></a></h2><h3 id="_3-1-基本架构" tabindex="-1"><a class="header-anchor" href="#_3-1-基本架构"><span>3.1. 基本架构</span></a></h3><p>PPP（Point-to-Point Protocol）协议处于 OSI（Open Systems Interconnection）参考模型的数据链路层，同时也处于 TCP/IP 协议栈的链路层，主要用在支持全双工的同异步链路上，进行点到点之间的数据传输。</p><figure><img src="'+p+'" alt="PPP 在协议栈中的位置" tabindex="0" loading="lazy"><figcaption>PPP 在协议栈中的位置</figcaption></figure><h3 id="_3-2-ppp报文封装的帧格式" tabindex="-1"><a class="header-anchor" href="#_3-2-ppp报文封装的帧格式"><span>3.2. PPP报文封装的帧格式</span></a></h3><p>PPP 帧的内容是指 Address、Control、Protocol 和 Information 四个域的内容。</p><figure><img src="'+e+'" alt="PPP 报文格式" tabindex="0" loading="lazy"><figcaption>PPP 报文格式</figcaption></figure><p>PPP报文封装格式各字段含义</p><table><thead><tr><th style="text-align:center;"><div style="width:80px;">字段</div></th><th style="text-align:center;"><div style="width:120px;">长度</div></th><th>含义</th></tr></thead><tbody><tr><td style="text-align:center;">Flag</td><td style="text-align:center;">1 字节</td><td>标志域，标识了一个物理帧的起始和结束，该字节为 0x7E 。</td></tr><tr><td style="text-align:center;">Address</td><td style="text-align:center;">1 字节</td><td>Address 域可唯一标识对方。PPP协议被运用在点对点的链路上，因此使用PPP 协议互连的两个通信设备无须知道对方的数据链路层地址。按照协议的规定将该字节填充为全 1 的广播地址，对于 PPP 协议来说，该字段无实际意义。</td></tr><tr><td style="text-align:center;">Control</td><td style="text-align:center;">1 字节</td><td>同 Address 域一样，PPP 数据帧的 Control 域也没有实际意义，规定值为 0x03 ，表明为无序号帧。PPP 默认没有采用序列号和确认机制来实现可靠传输。该域与 Address 域一起标识了 PPP 报文，即 PPP 报文头为 FF03。</td></tr><tr><td style="text-align:center;">Protocol</td><td style="text-align:center;">1～2 字节</td><td>协议域，可用来区分 PPP 数据帧中信息域所承载的数据报文的内容。<br> <br>协议域的内容必须依据 ISO 3309 的地址扩展机制所给出的规定。该机制规定协议域所填充的内容必须为奇数，也就是要求低字节的最低位为「1」，高字节的最低位为「0」。<br> <br>如果当发送端发送的 PPP 数据帧的协议域字段不符合上述规定，接收端则会认为此数据帧是不可识别的。接收端向发送端发送一个 Protocol-Reject 报文，在该报文尾部将填充被拒绝报文的协议号。<br> <br>常见的协议代码：<li>0x0021：Internet Protocol</li><li>0x002b：Novell IPX</li><li>0x002d：Van Jacobson Compressed TCP/IP</li><li>0x002f：Van Jacobson Uncompressed TCP/IP</li><li>0x0057：Internet Protocol Version 6</li><li>0x8021：Internet Protocol Control Protocol</li><li>0x802b：Novell IPX Control Protocol</li><li>0x8031：Bridging NC</li><li>0x8057：IPv6 Control Protocol</li><li>0xC021：Link Control Protocol</li><li>0xC023：Password Authentication Protocol</li><li>0xC223：Challenge Handshake Authentication Protocol</li></td></tr><tr><td style="text-align:center;">Information</td><td style="text-align:center;">0～1500 字节</td><td>信息域，缺省最大长度是 1500 字节，其中包括填充域的内容。Information域的最大长度称为最大接收单元 MRU（Maximum Receive Unit）。MRU的缺省值为1500字节，在实际应用当中可根据实际需要进行MRU的协商。<br> <br>如果信息域长度不足 1500 字节，可被填充，但不是必须的。如果填充，则需通信双方的两端能辨认出填充信息和真正需要传送的信息，方可正常通信。</td></tr><tr><td style="text-align:center;">FCS</td><td style="text-align:center;">2 字节</td><td>校验域，其功能主要对 PPP 数据帧传输的正确性进行检测，其计算范围是除了标志域（Flag域）的其他域。<br> <br>在数据帧中引入了一些传输的保证机制，会引入更多的开销，这样可能会增加应用层交互的延迟。</td></tr></tbody></table><h3 id="_3-3-lcp报文封装的帧格式" tabindex="-1"><a class="header-anchor" href="#_3-3-lcp报文封装的帧格式"><span>3.3. LCP报文封装的帧格式</span></a></h3><p>在链路建立阶段，PPP 协议通过 LCP 报文进行链路的建立和协商。此时 LCP 报文作为 PPP 的净载荷被封装在 PPP 数据帧的 Information 域中，PPP 数据帧的协议域的值固定填充 <code>0xC021</code>。</p><p>在链路建立阶段的整个过程中信息域的内容是变化的，它包括很多种类型的报文，所以这些报文也要通过相应的字段来区分。</p><figure><img src="'+e+`" alt="PPP 报文格式" tabindex="0" loading="lazy"><figcaption>PPP 报文格式</figcaption></figure><p>LCP报文封装格式各字段的含义</p><table><thead><tr><th style="text-align:center;"><div style="width:80px;">字段</div></th><th style="text-align:center;"><div style="width:120px;">长度</div></th><th>含义</th></tr></thead><tbody><tr><td style="text-align:center;">Code</td><td style="text-align:center;">1 字节</td><td>代码域，主要是用来标识 LCP 数据报文的类型。<br> <br>在链路建立阶段，接收方接收到 LCP 数据报文。当其代码域的值无效时，就会向对端发送一个 LCP 的代码拒绝报文（ Code-Reject 报文）。<br> <br>常见Code值如下：<li>0x01: Configure-Request</li><li>0x02: Configure-Ack</li><li>0x03: Configure-Nak</li><li>0x04: Configure-Reject</li><li>0x05: Terminate-Request</li><li>0x06: Terminate-Ack</li><li>0x07: Code-Reject</li><li>0x08: Protocol-Reject</li><li>0x09: Echo-Request</li><li>0x0a: Echo-Reply</li><li>0x0b: Discard-Request</li><li>0x0c: Reserved</li></td></tr><tr><td style="text-align:center;">Identifier</td><td style="text-align:center;">1 字节</td><td>标识域，表示进行协商报文的匹配关系。标识域目的是用来匹配请求和响应报文。<br> <br>一般而言，在进入链路建立阶段时，通信双方任何一端都会连续发送几个配置请求报文（ Configure-Request 报文）。这几个请求报文的数据域的值可能是完全一样的，只是它们的标识域不同。<br> <br>通常一个配置请求报文的 ID 是从 0x01 开始逐步加 1 的。<br> <br>当对端接收到该配置请求报文后，无论使用何种报文回应对方，但必须要求回应报文中的 ID 要与接收报文中的 ID 一致。当通信设备收到回应后就可以将该回应报文与发送时的报文进行比较来决定下一步的操作。</td></tr><tr><td style="text-align:center;">Length</td><td style="text-align:center;">2 字节</td><td>长度域，表示此协商报文长度，也就是该 LCP 报文的总字节数。它是代码域、标识域、长度域和数据域四个域长度的总和。<br> <br>长度域所指示字节数之外的字节将被当作填充字节而忽略掉，而且该域的值不能超过 MRU 的值。</td></tr><tr><td style="text-align:center;">Data</td><td style="text-align:center;">可变长度</td><td>数据域，所包含的是协商报文的内容。<br> <br><ul><li>Type 为协商选项类型。常见 Type 中的协商类型值：</li><ul><li>0x01: Maximum-Receive-Unit</li><li>0x02: Async-Control-Character-Map</li><li>0x03: Authentication-Protocol</li><li>0x04: Quality-Protocol</li><li>0x05: Magic-Number</li><li>0x06: RESERVED</li><li>0x07: Protocol-Field-Compression</li><li>0x08: Address-and-Control-Field-Compression</li></ul><li>Length 为协商选项长度，它是指Data域的总长度，也就是包含Type、Length和Data。</li><li>Data 为协商的选项具体内容。</li></ul></td></tr></tbody></table><h3 id="_3-4-ppp-帧示例" tabindex="-1"><a class="header-anchor" href="#_3-4-ppp-帧示例"><span>3.4. PPP 帧示例</span></a></h3><details class="hint-container details"><summary>PPP LCP 帧（Configure-Request）</summary><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="PPP LCP 帧（Configure-Request）" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>Frame 1: 16 bytes on wire (128 bits), 16 bytes captured (128 bits)</span></span>
<span class="line"><span>    Arrival Time: Apr 24, 2009 06:38:09.600000000 </span></span>
<span class="line"><span>    Epoch Time: 1240526289.600000000 seconds</span></span>
<span class="line"><span>    [Time delta from previous captured frame: 0.000000000 seconds]</span></span>
<span class="line"><span>    [Time delta from previous displayed frame: 0.000000000 seconds]</span></span>
<span class="line"><span>    [Time since reference or first frame: 0.000000000 seconds]</span></span>
<span class="line"><span>    Frame Number: 1</span></span>
<span class="line"><span>    Frame Length: 16 bytes (128 bits)</span></span>
<span class="line"><span>    Capture Length: 16 bytes (128 bits)</span></span>
<span class="line"><span>    [Frame is marked: False]</span></span>
<span class="line"><span>    [Frame is ignored: False]</span></span>
<span class="line"><span>    [Protocols in frame: ppp:lcp]</span></span>
<span class="line"><span>    Point-to-Point Direction: Sent (0)</span></span>
<span class="line"><span>Point-to-Point Protocol</span></span>
<span class="line"><span>    Address: 0xff</span></span>
<span class="line"><span>    Control: 0x03</span></span>
<span class="line"><span>    Protocol: Link Control Protocol (0xc021)</span></span>
<span class="line"><span>[Direction: DTE-&gt;DCE (0)]</span></span>
<span class="line"><span>PPP Link Control Protocol</span></span>
<span class="line"><span>    Code: Configuration Request (0x01)</span></span>
<span class="line"><span>    Identifier: 0x01</span></span>
<span class="line"><span>    Length: 10</span></span>
<span class="line"><span>    Options: (6 bytes)</span></span>
<span class="line"><span>        Async Control Character Map: 0x000a0000 (, DC1 (XON)DC3 (XOFF))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>PPP LCP 帧（Configure-Reject）</summary><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="PPP LCP 帧（Configure-Reject）" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>Frame 1: 20 bytes on wire (160 bits), 20 bytes captured (160 bits)</span></span>
<span class="line"><span>    Arrival Time: Apr 24, 2009 06:38:09.600000000 </span></span>
<span class="line"><span>    Epoch Time: 1240526289.600000000 seconds</span></span>
<span class="line"><span>    [Time delta from previous captured frame: 0.000000000 seconds]</span></span>
<span class="line"><span>    [Time delta from previous displayed frame: 0.000000000 seconds]</span></span>
<span class="line"><span>    [Time since reference or first frame: 0.000000000 seconds]</span></span>
<span class="line"><span>    Frame Number: 1</span></span>
<span class="line"><span>    Frame Length: 20 bytes (160 bits)</span></span>
<span class="line"><span>    Capture Length: 20 bytes (160 bits)</span></span>
<span class="line"><span>    [Frame is marked: False]</span></span>
<span class="line"><span>    [Frame is ignored: False]</span></span>
<span class="line"><span>    [Protocols in frame: ppp:lcp]</span></span>
<span class="line"><span>    Point-to-Point Direction: Sent (0)</span></span>
<span class="line"><span>Point-to-Point Protocol</span></span>
<span class="line"><span>    Address: 0xff</span></span>
<span class="line"><span>    Control: 0x03</span></span>
<span class="line"><span>    Protocol: Link Control Protocol (0xc021)</span></span>
<span class="line"><span>[Direction: DTE-&gt;DCE (0)]</span></span>
<span class="line"><span>PPP Link Control Protocol</span></span>
<span class="line"><span>    Code: Configuration Reject (0x04)</span></span>
<span class="line"><span>    Identifier: 0x00</span></span>
<span class="line"><span>    Length: 14</span></span>
<span class="line"><span>    Options: (10 bytes)</span></span>
<span class="line"><span>        Magic number: 0x43acefab</span></span>
<span class="line"><span>        Protocol field compression</span></span>
<span class="line"><span>        Address/control field compression</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>PPP LCP 帧（Configure-NAK）</summary><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="PPP LCP 帧（Configure-NAK）" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>Frame 6: 20 bytes on wire (160 bits), 20 bytes captured (160 bits)</span></span>
<span class="line"><span>    Arrival Time: Apr 24, 2009 06:38:09.600000000 </span></span>
<span class="line"><span>    Epoch Time: 1240526289.600000000 seconds</span></span>
<span class="line"><span>    [Time delta from previous captured frame: 0.000000000 seconds]</span></span>
<span class="line"><span>    [Time delta from previous displayed frame: 0.000000000 seconds]</span></span>
<span class="line"><span>    [Time since reference or first frame: 0.000000000 seconds]</span></span>
<span class="line"><span>    Frame Number: 6</span></span>
<span class="line"><span>    Frame Length: 20 bytes (160 bits)</span></span>
<span class="line"><span>    Capture Length: 20 bytes (160 bits)</span></span>
<span class="line"><span>    [Frame is marked: False]</span></span>
<span class="line"><span>    [Frame is ignored: False]</span></span>
<span class="line"><span>    [Protocols in frame: ppp:lcp]</span></span>
<span class="line"><span>    Point-to-Point Direction: Received (1)</span></span>
<span class="line"><span>Point-to-Point Protocol</span></span>
<span class="line"><span>    Address: 0xff</span></span>
<span class="line"><span>    Control: 0x03</span></span>
<span class="line"><span>    Protocol: Link Control Protocol (0xc021)</span></span>
<span class="line"><span>[Direction: DCE-&gt;DTE (1)]</span></span>
<span class="line"><span>PPP Link Control Protocol</span></span>
<span class="line"><span>    Code: Configuration Nak (0x03)</span></span>
<span class="line"><span>    Identifier: 0x01</span></span>
<span class="line"><span>    Length: 14</span></span>
<span class="line"><span>    Options: (10 bytes)</span></span>
<span class="line"><span>        Magic number: 0x43ace5f9</span></span>
<span class="line"><span>        Protocol field compression</span></span>
<span class="line"><span>        Address/control field compression</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>PPP LCP 帧（Configure-ACK）</summary><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="PPP LCP 帧（Configure-ACK）" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>Frame 1: 16 bytes on wire (128 bits), 16 bytes captured (128 bits)</span></span>
<span class="line"><span>    Arrival Time: Apr 24, 2009 06:38:09.600000000 </span></span>
<span class="line"><span>    Epoch Time: 1240526289.600000000 seconds</span></span>
<span class="line"><span>    [Time delta from previous captured frame: 0.000000000 seconds]</span></span>
<span class="line"><span>    [Time delta from previous displayed frame: 0.000000000 seconds]</span></span>
<span class="line"><span>    [Time since reference or first frame: 0.000000000 seconds]</span></span>
<span class="line"><span>    Frame Number: 1</span></span>
<span class="line"><span>    Frame Length: 16 bytes (128 bits)</span></span>
<span class="line"><span>    Capture Length: 16 bytes (128 bits)</span></span>
<span class="line"><span>    [Frame is marked: False]</span></span>
<span class="line"><span>    [Frame is ignored: False]</span></span>
<span class="line"><span>    [Protocols in frame: ppp:lcp]</span></span>
<span class="line"><span>    Point-to-Point Direction: Sent (0)</span></span>
<span class="line"><span>Point-to-Point Protocol</span></span>
<span class="line"><span>    Address: 0xff</span></span>
<span class="line"><span>    Control: 0x03</span></span>
<span class="line"><span>    Protocol: Link Control Protocol (0xc021)</span></span>
<span class="line"><span>[Direction: DTE-&gt;DCE (0)]</span></span>
<span class="line"><span>PPP Link Control Protocol</span></span>
<span class="line"><span>    Code: Configuration Ack (0x02)</span></span>
<span class="line"><span>    Identifier: 0x01</span></span>
<span class="line"><span>    Length: 10</span></span>
<span class="line"><span>    Options: (6 bytes)</span></span>
<span class="line"><span>        Async Control Character Map: 0x00000000 (None)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>PPP LCP 帧 （Discard-Request）</summary><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="PPP LCP 帧 （Discard-Request）" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>Frame 1: 14 bytes on wire (112 bits), 14 bytes captured (112 bits)</span></span>
<span class="line"><span>    Arrival Time: Apr 24, 2009 06:38:09.600000000 </span></span>
<span class="line"><span>    Epoch Time: 1240526289.600000000 seconds</span></span>
<span class="line"><span>    [Time delta from previous captured frame: 0.000000000 seconds]</span></span>
<span class="line"><span>    [Time delta from previous displayed frame: 0.000000000 seconds]</span></span>
<span class="line"><span>    [Time since reference or first frame: 0.000000000 seconds]</span></span>
<span class="line"><span>    Frame Number: 1</span></span>
<span class="line"><span>    Frame Length: 14 bytes (112 bits)</span></span>
<span class="line"><span>    Capture Length: 14 bytes (112 bits)</span></span>
<span class="line"><span>    [Frame is marked: False]</span></span>
<span class="line"><span>    [Frame is ignored: False]</span></span>
<span class="line"><span>    [Protocols in frame: ppp:lcp]</span></span>
<span class="line"><span>    Point-to-Point Direction: Received (1)</span></span>
<span class="line"><span>Point-to-Point Protocol</span></span>
<span class="line"><span>    Address: 0xff</span></span>
<span class="line"><span>    Control: 0x03</span></span>
<span class="line"><span>    Protocol: Link Control Protocol (0xc021)</span></span>
<span class="line"><span>[Direction: DCE-&gt;DTE (1)]</span></span>
<span class="line"><span>PPP Link Control Protocol</span></span>
<span class="line"><span>    Code: Discard Request (0x0b)</span></span>
<span class="line"><span>    Identifier: 0x02</span></span>
<span class="line"><span>    Length: 8</span></span>
<span class="line"><span>    Magic number: 0x43acefab</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>PPP LCP 帧（Protocol-Reject）</summary><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="PPP LCP 帧（Protocol-Reject）" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>Frame 1: 24 bytes on wire (192 bits), 24 bytes captured (192 bits)</span></span>
<span class="line"><span>    Arrival Time: Apr 24, 2009 06:38:09.600000000</span></span>
<span class="line"><span>    Epoch Time: 1240526289.600000000 seconds</span></span>
<span class="line"><span>    [Time delta from previous captured frame: 0.000000000 seconds]</span></span>
<span class="line"><span>    [Time delta from previous displayed frame: 0.000000000 seconds]</span></span>
<span class="line"><span>    [Time since reference or first frame: 0.000000000 seconds]</span></span>
<span class="line"><span>    Frame Number: 1</span></span>
<span class="line"><span>    Frame Length: 24 bytes (192 bits)</span></span>
<span class="line"><span>    Capture Length: 24 bytes (192 bits)</span></span>
<span class="line"><span>    [Frame is marked: False]</span></span>
<span class="line"><span>    [Frame is ignored: False]</span></span>
<span class="line"><span>    [Protocols in frame: ppp:lcp:ccp]</span></span>
<span class="line"><span>    Point-to-Point Direction: Received (1)</span></span>
<span class="line"><span>Point-to-Point Protocol</span></span>
<span class="line"><span>    Address: 0xff</span></span>
<span class="line"><span>    Control: 0x03</span></span>
<span class="line"><span>    Protocol: Link Control Protocol (0xc021)</span></span>
<span class="line"><span>[Direction: DCE-&gt;DTE (1)]</span></span>
<span class="line"><span>PPP Link Control Protocol</span></span>
<span class="line"><span>    Code: Protocol Reject (0x08)</span></span>
<span class="line"><span>    Identifier: 0x03</span></span>
<span class="line"><span>    Length: 18</span></span>
<span class="line"><span>    Rejected protocol: Compression Control Protocol (0x80fd)</span></span>
<span class="line"><span>    Rejected packet (12 bytes)</span></span>
<span class="line"><span>    PPP Compression Control Protocol</span></span>
<span class="line"><span>        Code: Configuration Request (0x01)</span></span>
<span class="line"><span>        Identifier: 0x01</span></span>
<span class="line"><span>        Length: 12</span></span>
<span class="line"><span>        Options: (8 bytes)</span></span>
<span class="line"><span>            Deflate</span></span>
<span class="line"><span>                Window: 7</span></span>
<span class="line"><span>                Method: zlib compression (0x08)</span></span>
<span class="line"><span>                Sequence number check method: 0</span></span>
<span class="line"><span>            MVRCA (Magnalink)</span></span>
<span class="line"><span>                Features: 3</span></span>
<span class="line"><span>                Packet by Packet flag: true</span></span>
<span class="line"><span>                History: 32</span></span>
<span class="line"><span>                Number of contexts: 0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>PPP IPCP 帧（Configuration-Request）</summary><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="PPP IPCP 帧（Configuration-Request）" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>Frame 1: 16 bytes on wire (128 bits), 16 bytes captured (128 bits)</span></span>
<span class="line"><span>    Arrival Time: Apr 24, 2009 06:38:09.600000000 </span></span>
<span class="line"><span>    Epoch Time: 1240526289.600000000 seconds</span></span>
<span class="line"><span>    [Time delta from previous captured frame: 0.000000000 seconds]</span></span>
<span class="line"><span>    [Time delta from previous displayed frame: 0.000000000 seconds]</span></span>
<span class="line"><span>    [Time since reference or first frame: 0.000000000 seconds]</span></span>
<span class="line"><span>    Frame Number: 1</span></span>
<span class="line"><span>    Frame Length: 16 bytes (128 bits)</span></span>
<span class="line"><span>    Capture Length: 16 bytes (128 bits)</span></span>
<span class="line"><span>    [Frame is marked: False]</span></span>
<span class="line"><span>    [Frame is ignored: False]</span></span>
<span class="line"><span>    [Protocols in frame: ppp:ipcp]</span></span>
<span class="line"><span>    Point-to-Point Direction: Received (1)</span></span>
<span class="line"><span>Point-to-Point Protocol</span></span>
<span class="line"><span>    Address: 0xff</span></span>
<span class="line"><span>    Control: 0x03</span></span>
<span class="line"><span>    Protocol: IP Control Protocol (0x8021)</span></span>
<span class="line"><span>[Direction: DCE-&gt;DTE (1)]</span></span>
<span class="line"><span>PPP IP Control Protocol</span></span>
<span class="line"><span>    Code: Configuration Request (0x01)</span></span>
<span class="line"><span>    Identifier: 0x00</span></span>
<span class="line"><span>    Length: 10</span></span>
<span class="line"><span>    Options: (6 bytes)</span></span>
<span class="line"><span>        IP address: 10.28.113.85</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>PPP IPCP 帧（Configuration-ACK）</summary><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="PPP IPCP 帧（Configuration-ACK）" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>Frame 1: 16 bytes on wire (128 bits), 16 bytes captured (128 bits)</span></span>
<span class="line"><span>    Arrival Time: Apr 24, 2009 06:38:09.600000000 </span></span>
<span class="line"><span>    Epoch Time: 1240526289.600000000 seconds</span></span>
<span class="line"><span>    [Time delta from previous captured frame: 0.000000000 seconds]</span></span>
<span class="line"><span>    [Time delta from previous displayed frame: 0.000000000 seconds]</span></span>
<span class="line"><span>    [Time since reference or first frame: 0.000000000 seconds]</span></span>
<span class="line"><span>    Frame Number: 1</span></span>
<span class="line"><span>    Frame Length: 16 bytes (128 bits)</span></span>
<span class="line"><span>    Capture Length: 16 bytes (128 bits)</span></span>
<span class="line"><span>    [Frame is marked: False]</span></span>
<span class="line"><span>    [Frame is ignored: False]</span></span>
<span class="line"><span>    [Protocols in frame: ppp:ipcp]</span></span>
<span class="line"><span>    Point-to-Point Direction: Sent (0)</span></span>
<span class="line"><span>Point-to-Point Protocol</span></span>
<span class="line"><span>    Address: 0xff</span></span>
<span class="line"><span>    Control: 0x03</span></span>
<span class="line"><span>    Protocol: IP Control Protocol (0x8021)</span></span>
<span class="line"><span>[Direction: DTE-&gt;DCE (0)]</span></span>
<span class="line"><span>PPP IP Control Protocol</span></span>
<span class="line"><span>    Code: Configuration Ack (0x02)</span></span>
<span class="line"><span>    Identifier: 0x00</span></span>
<span class="line"><span>    Length: 10</span></span>
<span class="line"><span>    Options: (6 bytes)</span></span>
<span class="line"><span>        IP address: 10.28.113.85</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>PPP IPCP 帧（Configuration-NAK）</summary><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="PPP IPCP 帧（Configuration-NAK）" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>Frame 1: 28 bytes on wire (224 bits), 28 bytes captured (224 bits)</span></span>
<span class="line"><span>    Arrival Time: Apr 24, 2009 06:38:09.600000000</span></span>
<span class="line"><span>    Epoch Time: 1240526289.600000000 seconds</span></span>
<span class="line"><span>    [Time delta from previous captured frame: 0.000000000 seconds]</span></span>
<span class="line"><span>    [Time delta from previous displayed frame: 0.000000000 seconds]</span></span>
<span class="line"><span>    [Time since reference or first frame: 0.000000000 seconds]</span></span>
<span class="line"><span>    Frame Number: 1</span></span>
<span class="line"><span>    Frame Length: 28 bytes (224 bits)</span></span>
<span class="line"><span>    Capture Length: 28 bytes (224 bits)</span></span>
<span class="line"><span>    [Frame is marked: False]</span></span>
<span class="line"><span>    [Frame is ignored: False]</span></span>
<span class="line"><span>    [Protocols in frame: ppp:ipcp]</span></span>
<span class="line"><span>    Point-to-Point Direction: Received (1)</span></span>
<span class="line"><span>Point-to-Point Protocol</span></span>
<span class="line"><span>    Address: 0xff</span></span>
<span class="line"><span>    Control: 0x03</span></span>
<span class="line"><span>    Protocol: IP Control Protocol (0x8021)</span></span>
<span class="line"><span>[Direction: DCE-&gt;DTE (1)]</span></span>
<span class="line"><span>PPP IP Control Protocol</span></span>
<span class="line"><span>    Code: Configuration Nak (0x03)</span></span>
<span class="line"><span>    Identifier: 0x01</span></span>
<span class="line"><span>    Length: 22</span></span>
<span class="line"><span>    Options: (18 bytes)</span></span>
<span class="line"><span>        IP address: 10.160.219.2</span></span>
<span class="line"><span>        Primary DNS server IP address: 10.28.114.91</span></span>
<span class="line"><span>        Secondary DNS server IP address: 10.28.122.93</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><details class="hint-container details"><summary>PPP CCP 帧（Configuration-Request）</summary><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="PPP CCP 帧（Configuration-Request）" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>Frame 15: 18 bytes on wire (144 bits), 18 bytes captured (144 bits)</span></span>
<span class="line"><span>    Arrival Time: Apr 24, 2009 06:38:09.600000000</span></span>
<span class="line"><span>    Epoch Time: 1240526289.600000000 seconds</span></span>
<span class="line"><span>    [Time delta from previous captured frame: 0.000000000 seconds]</span></span>
<span class="line"><span>    [Time delta from previous displayed frame: 0.000000000 seconds]</span></span>
<span class="line"><span>    [Time since reference or first frame: 0.000000000 seconds]</span></span>
<span class="line"><span>    Frame Number: 15</span></span>
<span class="line"><span>    Frame Length: 18 bytes (144 bits)</span></span>
<span class="line"><span>    Capture Length: 18 bytes (144 bits)</span></span>
<span class="line"><span>    [Frame is marked: False]</span></span>
<span class="line"><span>    [Frame is ignored: False]</span></span>
<span class="line"><span>    [Protocols in frame: ppp:ccp]</span></span>
<span class="line"><span>    Point-to-Point Direction: Sent (0)</span></span>
<span class="line"><span>Point-to-Point Protocol</span></span>
<span class="line"><span>    Address: 0xff</span></span>
<span class="line"><span>    Control: 0x03</span></span>
<span class="line"><span>    Protocol: Compression Control Protocol (0x80fd)</span></span>
<span class="line"><span>[Direction: DTE-&gt;DCE (0)]</span></span>
<span class="line"><span>PPP Compression Control Protocol</span></span>
<span class="line"><span>    Code: Configuration Request (0x01)</span></span>
<span class="line"><span>    Identifier: 0x01</span></span>
<span class="line"><span>    Length: 12</span></span>
<span class="line"><span>    Options: (8 bytes)</span></span>
<span class="line"><span>        Deflate</span></span>
<span class="line"><span>            Window: 7</span></span>
<span class="line"><span>            Method: zlib compression (0x08)</span></span>
<span class="line"><span>            Sequence number check method: 0</span></span>
<span class="line"><span>        MVRCA (Magnalink)</span></span>
<span class="line"><span>            Features: 3</span></span>
<span class="line"><span>            Packet by Packet flag: true</span></span>
<span class="line"><span>            History: 32</span></span>
<span class="line"><span>            Number of contexts: 0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="_4-ppp-连接建立过程" tabindex="-1"><a class="header-anchor" href="#_4-ppp-连接建立过程"><span>4. PPP 连接建立过程</span></a></h2><p>PPP链路的建立是通过一系列的协商完成的。</p><figure><img src="`+r+'" alt="PPP 连接建立过程" tabindex="0" loading="lazy"><figcaption>PPP 连接建立过程</figcaption></figure><p>PPP 运行的过程如上图所示。</p><ol><li><p>通信双方开始建立 PPP 链路时，先进入到Establish阶段。</p></li><li><p>在 Establish 阶段，PPP 链路进行 LCP 协商。协商内容包括</p><ol><li>工作方式是 SP（Single-link PPP） 还是 MP（Multilink PPP）</li><li>最大接收单元 MRU</li><li>验证方式</li><li>魔术字（magic number）等选项。</li></ol><p>LCP 协商成功后进入 Open 状态，表示底层链路已经建立。</p></li><li><p>如果配置了验证，将进入 Authenticate 阶段，开始 CHAP 或 PAP 验证。如果没有配置验证，则直接进入 Network 阶段。</p></li><li><p>在 Authenticate 阶段，如果验证失败，进入 Terminate 阶段，拆除链路，LCP 状态转为 Down。如果验证成功，进入 Network 阶段，此时 LCP 状态仍为 Open。</p></li><li><p>在 Network 阶段，PPP 链路进行 NCP 协商。通过 NCP 协商来选择和配置一个网络层协议并进行网络层参数协商。只有相应的网络层协议协商成功后（相应协议的 NCP 协商状态为 Open），该网络层协议才可以通过这条 PPP 链路发送报文。</p><p>NCP协商包括 IPCP（IP Control Protocol）、MPLSCP（MPLS Control Protocol）等协商。IPCP 协商内容主要包括双方的 IP 地址。</p></li><li><p>NCP 协商成功后，PPP 链路将一直保持通信。PPP 运行过程中，可以随时中断连接，物理链路断开、认证失败、定时器超时、管理员通过配置关闭连接等动作都可能导致链路进入 Terminate 阶段。</p></li><li><p>在 Terminate 阶段，如果所有的资源都被释放，通信双方将回到 Dead 阶段，直到通信双方重新建立 PPP 连接，开始新的 PPP 链路建立。</p></li></ol><h3 id="_4-1-dead阶段-链路不可用阶段" tabindex="-1"><a class="header-anchor" href="#_4-1-dead阶段-链路不可用阶段"><span>4.1. Dead阶段（链路不可用阶段）</span></a></h3><p>Dead 阶段也称为物理层不可用阶段。PPP 链路都需从这个阶段开始和结束。</p><p>当通信双方的两端检测到物理线路激活（通常是检测到链路上有载波信号）时，就会从 Dead 阶段跃迁至 Establish 阶段，即链路建立阶段。</p><p>链路被断开后也同样会返回到链路不可用阶段。</p><h3 id="_4-2-establish阶段-链路建立阶段" tabindex="-1"><a class="header-anchor" href="#_4-2-establish阶段-链路建立阶段"><span>4.2. Establish阶段（链路建立阶段）</span></a></h3><p>在 Establish 阶段，PPP 链路进行 LCP 协商。协商内容包括：工作方式是 SP（Single-link PPP） 还是 MP（Multilink PPP）、最大接收单元 MRU、验证方式和魔术字（magic number）等选项。当完成配置报文的交换后，则会继续向下一个阶段跃迁。</p><p>在 Establish 阶段，LCP 的状态机会发生如下改变。</p><ul><li>当链路处于不可用阶段时，此时 LCP 的状态机处于初始化 【Initial】 状态或准备启动 【Starting】 状态。当检测到链路可用时，则物理层会向链路层发送一个 Up 事件。链路层收到该事件后，会将 LCP 的状态机从当前状态改变为 【Request-Sent（请求发送）】 状态，根据此时的状态机 LCP 会进行相应的动作，也就是开始发送 <code>Configure-Request</code> 报文来配置数据链路。</li><li>如果本端设备先收到 <code>Configure-Ack</code> 报文，则 LCP 的状态机从 【Request-Sent】 状态改变为 【Ack-Received】 状态，本端向对端发送 <code>Configure-Ack</code> 报文以后，LCP 的状态机从 【Ack-Received】 状态改变为 【Open】 状态。</li><li>如果本端设备先向对端发送 <code>Configure-Ack</code> 报文，则 LCP 的状态机从 【Request-Sent】 状态改变为 【Ack-Sent】 状态，本端收到对端发送的 <code>Configure-Ack</code> 报文以后，LCP 的状态机从 【Ack-Sent】 状态改变为 【Open】 状态。</li><li>LCP 状态机变为 【Open】 状态以后就完成当前阶段的协商，并向下一个阶段跃迁。</li></ul><p>下一个阶段既可能是验证阶段，也可能是网络层协议阶段。下一阶段的选择是依据链路两端的设备配置的，通常由用户来配置。</p><p>在一切顺利的情况下，LCP 的具体工作流程如下：</p><details class="hint-container details"><summary>场景1：LCP 协商</summary><figure><img src="'+d+'" alt="LCP 协商" tabindex="0" loading="lazy"><figcaption>LCP 协商</figcaption></figure><p>如图所示，R1 和 R2 使用串行链路相连，假设该链路为全双工链路，运行 PPP 协议。当物理层链路变为可用状态之后（即插入网线，网口灯亮起），R1 和 R2 使用 LCP 协商链路参数。</p><ol><li>当物理链路变为可用状态之后，R1 和 R2两台设备会几乎同时进入【Request-Sent】状态，然后几乎同时发送 <code>Configure-Request</code> 报。但是受到设备性能等各种方面的影响，可能并不完全同时。</li><li>这里我们假设 R1 比 R2 的速度快了那么一点点。R1 首先向 R2 发送一个 <code>Configure-Request</code> 报文。此报文包含在发送者（R1）上置的链路层参数，每个链路层参数使用「类型，长度，取值」的结构表示。</li><li>当 R2 收到此 <code>Configure-Request</code> 报文之后，如果 R2 能识别此报文中的所有链路层参数，并且认为每个参数的取值都是可以接受的，向 R1 回应一个 <code>Configure-Ack</code> 报文。</li><li>上面两个步骤说明了 R2 认为 R1 上的链路参数配置是可接受的。与上面两个步骤同步的 R2 也需要向 R1 发送 <code>Configure-Request</code> 文，使 R1 检测 R2 上的链路参数配置是不是可接受的。</li><li>当 R1 收到 <code>Configure-Request</code> 报文之后，如果 R1 能识别此报文中的所有链路层参数，并且认为每个参数的取值都是可以接受的，则 R2 回应一个 <code>Configure-Ack</code> 报文。</li><li>当本端接收到对端发送的 <code>Configure-Ack</code> 报文，并且本端也发送了 <code>Configure-Ack</code> 报文之后，本端 LCP 状态机就会置为 Open 态，后面再视情况进行下一阶段（认证阶段或者网络层协议阶段）。</li></ol></details><details class="hint-container details"><summary>场景2：检测链路状态</summary><figure><img src="'+c+'" alt="检测链路状态" tabindex="0" loading="lazy"><figcaption>检测链路状态</figcaption></figure><ol><li>LCP 建立连接之后，可以使用 <code>Echo-Request</code> 报文和 <code>Echo-Reply</code> 报文检测链路状态，收到一个 <code>Echo-Request</code> 报文之后应当应一个 <code>Echo-Reply</code> 报文，表示链路状态正常。</li><li>华为的 VRP 平台默认每隔 10 秒发送一次 <code>Echo-Request</code> 报文。</li></ol></details><details class="hint-container details"><summary>场景3：关闭连接</summary><figure><img src="'+o+'" alt="关闭连接" tabindex="0" loading="lazy"><figcaption>关闭连接</figcaption></figure><ol><li>认证不成功或者管理员手工关闭等原因可以使 LCP 关闭已经建立的连接。</li><li>LCP 关闭连接使用 <code>Terminate-Request</code> 报文和 <code>Terminate-Ack</code> 报文，<code>Terminate-Request</code> 报文用于请求对端关闭连接，一收到一个 <code>Terminate-Request</code> 报文，LCP 必须回应一个 <code>Terminate-Ack</code> 报文确认连接关闭。</li><li>在没有收到 <code>Terminate-Ack</code> 报文的情况下，每隔 3 秒重传一次 <code>Terminate-Request</code> 报文，连续两次重传没有收到 <code>Terminate-Ack</code> 报文，则认为对端不可用，连接关闭。</li></ol></details><p>如果出现了异常，大概可以又分为如下几种情况：</p><details class="hint-container details"><summary>场景4：LCP 协商超时</summary><figure><img src="'+P+'" alt="LCP 协商超时" tabindex="0" loading="lazy"><figcaption>LCP 协商超时</figcaption></figure><p>如图所示，R1 和 R2 使用串行链路相连，假设该链路为全双工链路，运行 PPP 协议。当物理层链路变为可用状态之后（即插入网线，网口灯亮起），R1 和 R2 使用 LCP 协商链路参数。</p><ol><li>当物理链路变为可用状态之后，R1 和 R2两台设备会几乎同时进入【Request-Sent】状态，然后几乎同时发送 <code>Configure-Request</code> 报。但是受到设备性能等各种方面的影响，可能并不完全同时。</li><li>这里我们假设 R1 比 R2 的速度快了那么一点点。R1 首先向 R2 发送一个 <code>Configure-Request</code> 报文。</li><li>假设 R2 因为设备故障或者线路故障等原因，未收到 <code>Configure-Request</code> 报文，或者发送了 <code>Configure-Ack</code> 报文，但未送达 1 。<strong>总之，R1 没有等到R2的 <code>Configure-Ack</code> 报文。</strong></li><li>R1 会间隔 3 秒重传一次 <code>Configure-Request</code> 报文。如果连续 10 次发送 <code>Configure-Request</code> 报文仍然没有收到 <code>Configure-Ack</code> 报文，则认为对端不可用，停止发送 <code>Configure-Request</code> 报文。</li></ol></details><details class="hint-container details"><summary>场景5：LCP 参数不一致，重新协商</summary><figure><img src="'+m+'" alt="LCP 参数不一致，重新协商" tabindex="0" loading="lazy"><figcaption>LCP 参数不一致，重新协商</figcaption></figure><p>如图所示，R1 和 R2 使用串行链路相连，假设该链路为全双工链路，运行 PPP 协议。当物理层链路变为可用状态之后（即插入网线，网口灯亮后），R1 和 R2 使用 LCP 协商链路参数。</p><ol><li>当物理链路变为可用状态之后，R1 和 R2两台设备会几乎同时进入【Request-Sent】状态，然后几乎同时发送 <code>Configure-Request</code> 文。但是受到设备性能等各种方面的影响，可能并不完全同时。</li><li>这里我们假设 R1 比 R2 的速度快了那么一点点。R1 首先向 R2 发送一个 <code>Configure-Request</code> 报文。</li><li>当 R2 收到 R1 发送的 <code>Configure-Request</code> 报文之后，如果 R2 能识别此报文中携带的所有链路层参数，但是认为部分或全部参数取值不能接受，即参数的取值协商不成功，则 R2 需要向 R1 回应一个 <code>Configure-Nak</code> 报文。</li><li>在这个 <code>Configure-Nak</code> 报文中，只包含不能接受的那部分链路层参数列表，每一个包含在此报文中链路层参数的取值均被修改为此报文发送者（R2）上可以接受的取值（或取值范围）。</li><li>在收到 <code>Configure-Nak</code> 报文之后，R1 需要根据此报文中的链路层参数重新选择本地使用的相关参数，并重新发送一个<code>Configure-Request</code> ，序列号需要和 <code>Configure-Nak</code> 报文中的相同。</li><li>连续 5 次协商仍然不成功的参数将被禁用，不再继续协商。</li><li>R2 收到新的 <code>Configure-Request</code> 报文之后，再次检查所有链路层参数，如果每个参数的取值都是可以接受的，则向 R1 回应一个<code>Configure-Ack</code> 报文。</li><li>接下来继续完成 R2 向 R1 的协商过程。</li></ol></details><details class="hint-container details"><summary>场景6：LCP 参数不识别</summary><figure><img src="'+u+'" alt="LCP 参数不识别" tabindex="0" loading="lazy"><figcaption>LCP 参数不识别</figcaption></figure><p>如图所示，R1 和 R2 使用串行链路相连，假设该链路为全双工链路，运行 PPP 协议。当物理层链路变为可用状态之后（即插入网线，网口灯亮起），R1 和 R2 使用 LCP 协商链路参数。</p><ol><li>当物理链路变为可用状态之后，R1 和 R2两台设备会几乎同时进入【Request-Sent】状态，然后几乎同时发送 <code>Configure-Request</code> 报。但是受到设备性能等各种方面的影响，可能并不完全同时。</li><li>这里我们假设 R1 比 R2 的速度快了那么一点点。R1 首先向 R2 发送一个 <code>Configure-Request</code> 报文。</li><li>当 R2 收到 R1 发送的 <code>Configure-Request</code> 报文之后，如果 R2 <strong>不能识别</strong>此报文中携带的部分或全部链路层参数，则 R2 需要 R1 回应一个 <code>Configure-Reject</code> 报文。</li><li>在此 <code>Configure-Reject</code> 报文中，只包含不被识别的那部分链路层参数列表。</li><li>R1 在收到 <code>Configure-Reject</code> 报文之后，R1 需要向 R2 重新发送一个 <code>Configure-Request</code> 报文，在新的 Configure-Request` 报文中，不再包含不被对端（R2）识别的参数。</li><li>R2 收到新的 <code>Configure-Request</code> 报文之后，再次检查所有链路层参数，如果每个参数的取值都是可以接受的，则向 R1 回应一个 Configure-Ack` 报文。</li><li>接下来继续完成 R2 向 R1 的协商过程。</li></ol></details><h3 id="_4-3-authenticate阶段-验证阶段" tabindex="-1"><a class="header-anchor" href="#_4-3-authenticate阶段-验证阶段"><span>4.3. Authenticate阶段（验证阶段）</span></a></h3><p>缺省情况下，PPP链路不进行验证。如果要求验证，在链路建立阶段必须指定验证协议。</p><p>PPP提供密码验证协议PAP和质询握手验证协议CHAP两种验证方式。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>PPP的验证方式又可以分为单向验证和双向验证。</p><ul><li>单向验证是指一端作为验证方，另一端作为被验证方。</li><li>双向验证是单向验证的简单叠加，即两端都是既作为验证方又作为被验证方。</li></ul><p>在实际应用中一般只采用单向验证。</p></div><h4 id="_4-3-1-pap验证过程" tabindex="-1"><a class="header-anchor" href="#_4-3-1-pap验证过程"><span>4.3.1. PAP验证过程</span></a></h4><p>PAP验证方式为两次握手验证，采用简单口令。协商报文以明文形式在链路上传输。</p><p>PAP验证的过程如下图所示。</p><figure><img src="'+h+'" alt="PAP 验证过程" tabindex="0" loading="lazy"><figcaption>PAP 验证过程</figcaption></figure><ol><li>被验证方把本地用户名和口令发送到验证方。</li><li>验证方根据本地用户表查看是否有被验证方的用户名 <ul><li>若有，则查看口令是否正确， <ul><li>若口令正确，则认证通过；</li><li>若口令不正确，则认证失败。</li></ul></li><li>若没有，则认证失败。</li></ul></li></ol><h4 id="_4-3-2-pap报文的帧格式" tabindex="-1"><a class="header-anchor" href="#_4-3-2-pap报文的帧格式"><span>4.3.2. PAP报文的帧格式</span></a></h4><p>PAP报文封装在协议域为 <code>0xC023</code> 的PPP数据链路层帧的信息域中。</p><p>PAP报文的帧格式如下图所示。</p><figure><img src="'+v+'" alt="PAP 报文的帧格式" tabindex="0" loading="lazy"><figcaption>PAP 报文的帧格式</figcaption></figure><p>PAP报文封装格式各字段的含义</p><table><thead><tr><th style="text-align:center;"><div style="width:80px;">字段</div></th><th style="text-align:center;"><div style="width:120px;">长度</div></th><th>含义</th></tr></thead><tbody><tr><td style="text-align:center;">Code</td><td style="text-align:center;">1 字节</td><td>代码域，标识 PAP 数据报文的类型。<br> <br>Authenticate-Request 报文的该字段取值为 0x01。<br> <br>Authenticate-Ack 报文的该字段取值为 0x02。<br> <br>Authenticate-Nak 报文的该字段取值为 0x03。</td></tr><tr><td style="text-align:center;">Identifier</td><td style="text-align:center;">1 字节</td><td>标识请求报文和应答报文是否匹配。</td></tr><tr><td style="text-align:center;">Length</td><td style="text-align:center;">2 字节</td><td>标识包括 Code、Identifier、Length 和 Data 域在内的 PAP 报文长度。<br> <br>超出此长度的报文将被认为是填充字节并被丢弃。</td></tr><tr><td style="text-align:center;">Data</td><td style="text-align:center;">可变长度</td><td>Data 域的内容由 Code 域来决定。</td></tr></tbody></table><h4 id="_4-3-3-chap验证过程" tabindex="-1"><a class="header-anchor" href="#_4-3-3-chap验证过程"><span>4.3.3. CHAP验证过程</span></a></h4><p>CHAP认证双方有三次握手。协商报文中带有的是用户名和被加密后的密码，因此安全性要高于PAP认证。</p><figure><img src="'+g+'" alt="CHAP 验证过程" tabindex="0" loading="lazy"><figcaption>CHAP 验证过程</figcaption></figure><p>CHAP单向验证过程分为两种情况：认证方配置了用户名和认证方没有配置用户名。在实际应用中推荐使用认证方配置用户名的方式，这样可以对认证方的用户名进行确认。</p><ul><li>认证方配置了用户名的认证过程 <ol><li>认证方主动发起认证请求（<code>Challenge</code>），认证方构造一个包含随机数的报文，并同时附带本端的用户名发送给被认证方。</li><li>被认证方接到认证方的认证请求后，先检查本端接口上是否配置了 CHAP 密码。 <ul><li>如果接口配置 CHAP 密码，则被认证方根据报文 ID、<code>ppp chap password</code> 命令配置的 CHAP 密码和 <code>Challenge</code> 报文中的随机数，利用 Hash 算法计算 Hash 值，将所得 Hash 值和被认证方自己的用户名发回认证方（<code>Response</code>）。</li><li>如果接口未配置 CHAP 密码，则根据此报文中认证方的用户名在本端的用户表查找该用户对应的密码，根据报文 ID、此用户密码和 <code>Challenge</code> 报文中的随机数，利用 Hash 算法计算 Hash 值，将所得 Hash 值和被认证方自己的用户名发回验证方（<code>Response</code>）。</li></ul></li><li>认证方根据报文 ID、自己保存的被认证方密码和 <code>Challenge</code> 报文中的随机数，利用 hash 算法计算 hash 值，并与 <code>Response</code> 报文中的 hash 值进行比较，若比较结果一致，认证通过，若比较结果不一致，认证失败。</li></ol></li><li>认证方没有配置用户名的认证过程 <ol><li>认证方主动发起认证请求，认证方向被认证方发送一个包含随机数的报文（<code>Challenge</code>）。</li><li>被认证方接到认证方的验证请求后，根据报文ID、<code>ppp chap password</code> 命令配置的 CHAP 密码和 <code>Challenge</code> 报文中的随机数，利用 Hash 算法计算 Hash 值，将所得 Hash 值和自己的用户名发回验证方（<code>Response</code>）。</li><li>验证方根据报文 ID、自己保存的被认证方密码和 <code>Challenge</code> 报文中的随机数，利用 Hash 算法计算 Hash 值，并与 <code>Response</code> 报文中的 Hash 值进行比较，若比较结果一致，认证通过，若比较结果不一致，认证失败。</li></ol></li></ul><h4 id="_4-3-4-chap验证报文帧格式" tabindex="-1"><a class="header-anchor" href="#_4-3-4-chap验证报文帧格式"><span>4.3.4. CHAP验证报文帧格式</span></a></h4><p>CHAP报文封装在协议域为 <code>0xC223</code> 的PPP数据链路层帧的信息域中。CHAP报文的帧格式如下图所示。</p><figure><img src="'+b+'" alt="CHAP 验证报文帧格式" tabindex="0" loading="lazy"><figcaption>CHAP 验证报文帧格式</figcaption></figure><p>CHAP报文封装格式各字段的含义</p><table><thead><tr><th style="text-align:center;"><div style="width:80px;">字段</div></th><th style="text-align:center;"><div style="width:120px;">长度</div></th><th>含义</th></tr></thead><tbody><tr><td style="text-align:center;">Code</td><td style="text-align:center;">1 字节</td><td>代码域，标识 CHAP 数据报文的类型。<br> <br>Challenge 报文的该字段取值为 0x01。<br> <br>Response 报文的该字段取值为 0x02。<br> <br>Success 报文的该字段取值为 0x03。<br> <br>Failure 报文的该字段取值为 0x04。</td></tr><tr><td style="text-align:center;">Identifier</td><td style="text-align:center;">1 字节</td><td>标识 Challenge 报文和 Response 报文是否匹配。</td></tr><tr><td style="text-align:center;">Length</td><td style="text-align:center;">2 字节</td><td>标识包括 Code、Identifier、Length 和 Data 域在内的 CHAP 报文长度。<br> <br>超出此长度的报文将被认为是填充字节并被丢弃。</td></tr><tr><td style="text-align:center;">Data</td><td style="text-align:center;">可变长度</td><td>Data 域的内容由 Code 域来决定。</td></tr></tbody></table><div class="hint-container tip"><p class="hint-container-title">提示</p><p>CHAP 与 PAP 认证的区别：</p><ul><li>PAP 认证中，在链路上以明文形式传输简单口令，完成 PPP 链路建立后，被验证方会不停地在链路上反复发送用户名和口令，直到身份验证过程结束，所以安全性不高。当实际应用过程中，对安全性要求不高时，可以采用 PAP 认证建立 PPP 连接。</li><li>CHAP 认证中，验证协议为三次握手验证协议。它只在网络上传输用户名，和经过 Hash 加密后的密码，因此安全性比PAP认证更高。当实际应用过程中，对安全性要求较高时，可以采用 CHAP 认证建立 PPP 连接。</li></ul></div><h3 id="_4-4-network阶段-网络层协议阶段" tabindex="-1"><a class="header-anchor" href="#_4-4-network阶段-网络层协议阶段"><span>4.4. Network阶段（网络层协议阶段）</span></a></h3><p>PPP 完成了前面几个阶段，通过 NCP 协商来选择和配置一个网络层协议并进行网络层参数协商。协商在数据链路上所传输的数据包的格式与类型。支持 NCP 的协议包括 IP、IPX、AppleTalk 等许多协议。</p><p>以常见的 IPCP 协议（IPCP 表示 NCP 对 IP 的封装形式，因为 NCP 可以封装不同的三层协议，如果是对 IPX 协议进行封装那么 NCP 的表现形式将是 IPXCP。）为例，它分为静态IP地址协商和动态IP地址协商。</p><details class="hint-container details"><summary>静态 IP 地址协商需要手动在链路两端配置 IP 地址。</summary><figure><img src="'+C+'" alt="NCP(IPCP) 静态IP地址协商" tabindex="0" loading="lazy"><figcaption>NCP(IPCP) 静态IP地址协商</figcaption></figure><p>静态 IP 地址协商的整个过程和 LCP 的协商过程差不多。以上图为例。</p><ol><li>R1 向 R2 发送 <code>Configure-Request</code> 报文，报文中需要携带本端的 IP 地址信息（10.0.0.1）。</li><li>R2 收到报文之后，先看 IP 地址是否冲突，如果不冲突，检查对方的 IP 地址是否为合法的单播 IP 地址（不为0.0.0.0），如果是合法播IP地址，为对方的接口 IP 地址生成一个 32 位的主机路由。之后向 R1 返回 <code>Configure-Ack</code> 报文。</li><li>接着 R2 再向 R1 发送 <code>Configure-Request</code> 报文，报文携带 R2 的 IP 地址信息（10.0.0.2）。</li><li>R1 收到报文之后，同样的先看 IP 地址是否冲突，如果不冲突，检查对方的 IP 地址是否为合法的单播 IP 地址（不为0.0.0.0），如果合法单播IP地址，为对方的接口 IP 地址生成一个 32 位的主机路由。之后向 R2 返回 <code>Configure-Ack</code> 报文。</li><li>两边分别完成一次 <code>Configure-Request</code> 和 <code>Configure-Ack</code> 握手过程，就协商成功了。</li></ol></details><details class="hint-container details"><summary>动态 IP 地址协商支持 PPP 链路一端为对端配置 IP 地址。</summary><figure><img src="'+f+'" alt="NCP(IPCP) 动态IP地址协商" tabindex="0" loading="lazy"><figcaption>NCP(IPCP) 动态IP地址协商</figcaption></figure><p>以上图为例，R1 接口没有配置 IP 地址，R2中为PPP配置了 IP 地址池，地址池范围为10.0.0.0，掩码为255.255.255.0。</p><ol><li>R1 向 R2 发送配置请求报文，报文中携带的 IP 地址为 0.0.0.0。</li><li>R2 收到对端的配置请求报文后，发现对端IP地址为0.0.0.0，于是回复一个 <code>Configure-Nak</code> 报文，并且从全局地址池中选出的一个IP 地址（10.0.0.254），通过 <code>Configure-Nak</code> 报文发送给 R1。</li><li>R1 收到 <code>Configure-Nak</code> 报文后，将报文中的 IP 地址作为自己接口的 IP 地址使用，并回复 <code>Configure-Request</code> 报文，报文携带的IP地址为 10.0.0.254。</li><li>R2 收到报文检查通过，生成一个 10.0.0.254/32 的主机路由，回复 <code>Configure-Ack</code> 报文。</li><li>接着 R2 再向 R1 发送 <code>Configure-Request</code> 报文，报文携带 R2 的 IP 地址信息（10.0.0.1）。</li><li>R1 收到报文之后，检查报文中IP合法性，如果是合法单播 IP 地址，为对方的接口 IP 地址生成一个 32 位的主机路由。之后向 R2 返回<code>Configure-Ack</code> 报文。</li><li>协商完成。</li></ol></details><p>每个 NCP 协议可在任何时间打开和关闭，当一个 NCP 的状态机变成 Open 状态时，则 PPP 就可以开始在链路上承载网络层数据传输。</p><h3 id="_4-5-terminate阶段-网络终止阶段" tabindex="-1"><a class="header-anchor" href="#_4-5-terminate阶段-网络终止阶段"><span>4.5. Terminate阶段（网络终止阶段）</span></a></h3><p>PPP 能在任何时候终止链路。当载波丢失、认证失败或管理员人为关闭链路等情况均会导致链路终止。</p><h2 id="_5-ppp-的魔术字校验" tabindex="-1"><a class="header-anchor" href="#_5-ppp-的魔术字校验"><span>5. PPP 的魔术字校验</span></a></h2><h3 id="_5-1-产生原因" tabindex="-1"><a class="header-anchor" href="#_5-1-产生原因"><span>5.1. 产生原因</span></a></h3><p>在网络中，两台设备通过中间的传输设备彼此互连。在传输的过程中，若发现两者互连关系错误，会对其互连关系进行重新调整。在调整过程中，两端的接口是无法感知的（因为接口没有Down/Up），因此不会触发LCP重协商。由于PPP协议只在LCP协商过程中才会去学习对端的主机路由，导致新互连关系的两个接口仍然学习着原互连关系的主机路由，引起传输错误。</p><p>若配置了PPP魔术字校验功能，当设备互连关系重新调整后，即使传输两端的接口未感知，也可以通过PPP的魔术字校验功能，触发LCP重新协商，重新学习对端32位主机路由。</p><h3 id="_5-2-实现原理" tabindex="-1"><a class="header-anchor" href="#_5-2-实现原理"><span>5.2. 实现原理</span></a></h3><p>魔术字是由各通信设备独立产生的。为了避免产生相同的魔术字，通常会采用随机方法产生一个独一无二的魔术字。一般来说魔术字会采用设备的系列号、网络硬件地址或时钟等。</p><p>在LCP协商阶段会彼此协商魔术字，LCP阶段的后续协商过程中的ECHO报文均携带此字段，且ECHO报文中该字段值必须与协商成功时本端的值保持一致。</p><p>如下图所示，R1、R2、R3 与 R4，通过交换机互连，且 R1 与 R2、R3 与 R4 之间建立 PPP 连接，并成功完成 LCP 协商。此时，发现互连关系错误，需要重新调整互连关系，在 R1 与 R3 之间建立 PPP 连接，则触发 LCP 重协商过程如下：</p><ol><li>R1 向 R3 发送 <code>Echo-Request</code> 报文，且该 <code>Echo-Request</code> 报文中携带 R1 的魔术字。</li><li>R3 收到 <code>Echo-Request</code> 报文后，与其之前协商成功时对端的魔术字（R4 的魔术字）进行比较，结果不同，则错误计数加 1。</li><li>R3 向 R1 回应 <code>Echo-Reply</code> 报文，且该 <code>Echo-Reply</code> 报文中携带 R3 的魔术字。</li><li>R1 收到 R3 回应的 <code>Echo-Reply</code> 报文后，先与之前协商成功时自己生成的魔术字（R1 的魔术字）进行比较，不同后，再与之前协商成功时对端魔术字（R2 的魔术字）进行比较，仍然不同，再将错误计数加 1。</li><li>重复上述过程，当错误计数累计超过一定次数后，触发 LCP 状态断连并重新协商。</li></ol><figure><img src="'+A+'" alt="PPP的魔术字校验" tabindex="0" loading="lazy"><figcaption>PPP的魔术字校验</figcaption></figure><div class="hint-container tip"><p class="hint-container-title">提示</p><p>上图中路由器的「本端/对端信息」为重连后触发 LCP 重新协商之前的状态，R1 和 R3 中所保存在魔术字仍然是之前协商成功时所保存的本端及对端信息，只有在触发 LCP 重协商后，协商魔术字信息才会进行更新。</p></div><h2 id="_6-ppp-协议震荡抑制" tabindex="-1"><a class="header-anchor" href="#_6-ppp-协议震荡抑制"><span>6. PPP 协议震荡抑制</span></a></h2><h3 id="_6-1-产生原因" tabindex="-1"><a class="header-anchor" href="#_6-1-产生原因"><span>6.1. 产生原因</span></a></h3><p>网络应用中，由于底层物理状态不稳定、链路层配置错误等原因可能导致封装PPP协议的接口频繁的进行PPP协议协商，PPP协议链路状态频繁地交替出现Up和Down状态，造成路由协议、MPLS等反复震荡，对设备和网络产生较严重影响，甚至可能造成部分设备瘫痪，网络不可使用。</p><p>配置PPP协议震荡抑制功能对PPP链路层协议频繁Up/Down事件进行控制，使其小于一定的频率，以减小对设备及网络稳定性的影响。</p><h3 id="_6-2-实现原理" tabindex="-1"><a class="header-anchor" href="#_6-2-实现原理"><span>6.2. 实现原理</span></a></h3><p>在PPP协议协商震荡抑制中，有以下几个概念：</p>',110),k=s("ul",null,[s("li",null,[s("p",null,[s("strong",null,"PPP 协议协商抑制惩罚值（penalty value）"),n("：PPP 协议协商抑制惩罚值是根据 PPP 协议状态Up/Down 的情况由抑制算法计算出来的一个值，其算法的核心是 PPP 协议协商抑制惩罚值随PPP 协议状态 Up/Down 的次数线性增加，同时按指数衰减。")])]),s("li",null,[s("p",null,[s("strong",null,"PPP 协议协商抑制门限（suppress）"),n("：当 PPP 协议协商抑制惩罚值超过此值时，PPP 协议协商将被抑制，协议状态保持 Down。")])]),s("li",null,[s("p",null,[s("strong",null,"PPP 协议协商重用门限（reuse）"),n("：当 PPP 协议协商抑制惩罚值小于此值时，PPP 协议协商抑制被解除，进行正常协商。")])]),s("li",null,[s("p",null,[s("strong",null,"PPP 协议协商抑制惩罚值最大值（ceiling）"),n("：PPP 协议协商抑制惩罚值的最大值，当 PPP 协议协商抑制惩罚值增加到最大值时便不再增加，防止 PPP 协议由于长时间抑制而无法协商。")]),s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"c"),s("mi",null,"e"),s("mi",null,"i"),s("mi",null,"l"),s("mi",null,"i"),s("mi",null,"n"),s("mi",null,"g"),s("mo",null,"="),s("mi",null,"r"),s("mi",null,"e"),s("mi",null,"u"),s("mi",null,"s"),s("mi",null,"e"),s("mo",null,"×"),s("msup",null,[s("mn",null,"2"),s("mfrac",null,[s("mrow",null,[s("mi",null,"M"),s("mi",null,"a"),s("mi",null,"x"),s("mi",null,"S"),s("mi",null,"u"),s("mi",null,"p"),s("mi",null,"p"),s("mi",null,"r"),s("mi",null,"e"),s("mi",null,"s"),s("mi",null,"s"),s("mi",null,"T"),s("mi",null,"i"),s("mi",null,"m"),s("mi",null,"e")]),s("mrow",null,[s("mi",null,"H"),s("mi",null,"a"),s("mi",null,"l"),s("mi",null,"f"),s("mi",null,"L"),s("mi",null,"i"),s("mi",null,"f"),s("mi",null,"e"),s("mi",null,"T"),s("mi",null,"i"),s("mi",null,"m"),s("mi",null,"e")])])])]),s("annotation",{encoding:"application/x-tex"},"ceiling=reuse×2^{MaxSuppressTime \\over HalfLifeTime}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal"},"ce"),s("span",{class:"mord mathnormal"},"i"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal"},"in"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal"},"re"),s("span",{class:"mord mathnormal"},"u"),s("span",{class:"mord mathnormal"},"se"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.1111em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.1111em"}},[s("span",{style:{top:"-3.4458em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mopen nulldelimiter sizing reset-size3 size6"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.9505em"}},[s("span",{style:{top:"-2.656em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size3 size1 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.08125em"}},"H"),s("span",{class:"mord mathnormal mtight"},"a"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mord mathnormal mtight"},"L"),s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mord mathnormal mtight"},"e"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"mord mathnormal mtight"},"im"),s("span",{class:"mord mathnormal mtight"},"e")])])]),s("span",{style:{top:"-3.2255em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line mtight",style:{"border-bottom-width":"0.049em"}})]),s("span",{style:{top:"-3.4624em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size3 size1 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10903em"}},"M"),s("span",{class:"mord mathnormal mtight"},"a"),s("span",{class:"mord mathnormal mtight"},"x"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.05764em"}},"S"),s("span",{class:"mord mathnormal mtight"},"u"),s("span",{class:"mord mathnormal mtight"},"pp"),s("span",{class:"mord mathnormal mtight"},"ress"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"mord mathnormal mtight"},"im"),s("span",{class:"mord mathnormal mtight"},"e")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.4829em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter sizing reset-size3 size6"})])])])])])])])])])])])])])]),s("li",null,[s("p",null,[s("strong",null,"PPP 协议协商抑制惩罚值半衰期（half-life-period）"),n("：PPP 协议协商抑制惩罚值的半衰期。从PPP 协议状态第一次变为 Down，开始计算半衰期。如果达到半衰期，抑制惩罚值减半。一个半衰期结束后，下一个半衰期开始。")])]),s("li",null,[s("p",null,[s("strong",null,"最长抑制时间（max-suppress-time）"),n("：PPP 协议被抑制后，最长抑制协议协商的时间。超过该时间后，PPP 协议重新进行协商，并按照协商结果上报协议状态。")])])],-1),_=a('<p>以上参数之间的关系可以用下图来说明</p><figure><img src="'+y+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>PPP 协议状态在 t1 时刻由于发生 Down 事件而受到惩罚，惩罚值加 1000，随后接口 Up 信号到达，惩罚值按照半衰期法则进行指数衰减，到 t2 时，PPP 协议状态再次发生 Down 事件，惩罚值加1000，达到 1600，已经超出 suppress 值1500，PPP协议状态被抑制。由于接口持续震荡，惩罚值持续增加，tA 时刻到达 ceiling 值 10000 后惩罚值不再增加。随着时间的推移，惩罚值逐渐降低，在 tB 时刻已下降到 reuse 值 750，PPP 协议协商抑制解除。</p><h2 id="_7-mp-multilink-ppp" tabindex="-1"><a class="header-anchor" href="#_7-mp-multilink-ppp"><span>7. MP（MultiLink PPP）</span></a></h2><h3 id="_7-1-产生原因" tabindex="-1"><a class="header-anchor" href="#_7-1-产生原因"><span>7.1. 产生原因</span></a></h3><p>MP（MultiLink PPP）是出于增加带宽和可靠性的考虑，将多个 PPP 链路捆绑使用的技术。MP 会将报文分片（小于最小分片包长时不分片）后，从 MP 链路下的多个 PPP 通道发送到 PPP 对端，对端将这些分片组装起来递给网络层。</p><h3 id="_7-2-实现方式" tabindex="-1"><a class="header-anchor" href="#_7-2-实现方式"><span>7.2. 实现方式</span></a></h3><p>MP-Group 接口是 MP 的专用接口，不能支持其他应用，通过将多条 PPP 链路加入到 MP-Group 可以实现 MP。</p><h3 id="_7-3-协商过程" tabindex="-1"><a class="header-anchor" href="#_7-3-协商过程"><span>7.3. 协商过程</span></a></h3><p>MP 的协商较为特殊。MP 一些选项的协商是在 LCP 协商过程中完成的，如最大接收重组单元 MRRU（Max Receive Reconstructed Unit）、终端描述符 ED（Endpoint Discriminator）等。</p><p>MP 的协商包括 LCP 协商和 NCP 协商两个过程：</p><ul><li>LCP 协商：两端首先进行 LCP 协商，除了协商一般的 LCP 参数外，还要验证对端接口是否也工作在 MP 方式下。如果两端工作方式不同，LCP 协商不成功。</li><li>NCP 协商：根据 MP-Group 接口的各项 NCP 参数（如 IP 地址等）进行 NCP 协商，物理接口配置的 NCP 参数不起作用。</li></ul><p>NCP 协商通过后，即可建立 MP 链路。</p><h3 id="_7-4-使用价值" tabindex="-1"><a class="header-anchor" href="#_7-4-使用价值"><span>7.4. <strong>使用价值</strong></span></a></h3><p>MP 的使用价值主要有：</p><ul><li>增加带宽</li><li>负载分担</li><li>链路备份</li><li>利用分片降低时延</li></ul><h3 id="_7-5-mp应用" tabindex="-1"><a class="header-anchor" href="#_7-5-mp应用"><span>7.5. MP应用</span></a></h3><p>当用户对带宽的要求较高时，单个的 PPP 链路无法提供足够的带宽，这时将多个 PPP 链路进行捆绑形成 MP 链路，旨在增加链路的带宽并增强链路可靠性。</p><p>如下图所示，DeviceA 和 DeviceB 之间存在两条直连 PPP 链路，可以通过创建 MP-Group 接口，将两条 PPP 链路进行捆绑，可以提供速率更高、带宽更大的链路，且其中一条链路发生故障时，其他链路可以正常通信。</p><figure><img src="'+E+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_8-参考资料" tabindex="-1"><a class="header-anchor" href="#_8-参考资料"><span>8. 参考资料</span></a></h2><ol><li>《PPP特性描述》 <a href="https://support.huawei.com/enterprise/zh/doc/EDOC1100278541/38f3f996" target="_blank" rel="noopener noreferrer">https://support.huawei.com/enterprise/zh/doc/EDOC1100278541/38f3f996</a></li><li>《计算机网络-PPP与PPPoE协议》 <a href="https://blog.csdn.net/weixin_43483442/article/details/135873077" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/weixin_43483442/article/details/135873077</a></li><li>《PPP LCP 原理》 <a href="https://blog.csdn.net/tushanpeipei/article/details/111208934" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/tushanpeipei/article/details/111208934</a></li><li>《PPP建立的过程》 <a href="https://cloud.tencent.com/developer/article/1792207" target="_blank" rel="noopener noreferrer">https://cloud.tencent.com/developer/article/1792207</a></li></ol><table><thead><tr><th><div style="width:120px;">标准</div></th><th>描述</th></tr></thead><tbody><tr><td><a href="https://tools.ietf.org/html/rfc1661" target="_blank" rel="noopener noreferrer">RFC 1661</a></td><td>The Point-to-Point Protocol （PPP）</td></tr><tr><td><a href="https://tools.ietf.org/html/rfc1055" target="_blank" rel="noopener noreferrer">RFC 1055</a></td><td>A NONSTANDARD FOR TRANSMISSION OF IP DATAGRAMS OVER SERIAL LINES: SLIP</td></tr><tr><td><a href="https://tools.ietf.org/html/rfc1144" target="_blank" rel="noopener noreferrer">RFC 1144</a></td><td>Compressing TCP/IP headers for low-speed serial links</td></tr><tr><td><a href="https://tools.ietf.org/html/rfc1717" target="_blank" rel="noopener noreferrer">RFC 1717</a></td><td>The PPP Multilink Protocol (MP)</td></tr><tr><td><a href="https://tools.ietf.org/html/rfc1332" target="_blank" rel="noopener noreferrer">RFC 1332</a></td><td>The PPP Internet Protocol Control Protocol （IPCP）</td></tr><tr><td><a href="https://tools.ietf.org/html/rfc1962" target="_blank" rel="noopener noreferrer">RFC 1962</a></td><td>The PPP Compression Control Protocol</td></tr></tbody></table>',23),F=[R,k,_];function L(D,I){return l(),t("div",null,F)}const N=i(x,[["render",L],["__file","2024-08-02-PPP协议.html.vue"]]),w=JSON.parse('{"path":"/posts/Network/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/2024-08-02-PPP%E5%8D%8F%E8%AE%AE.html","title":"【转载】PPP 协议","lang":"zh-CN","frontmatter":{"title":"【转载】PPP 协议","shortTitle":"PPP 协议","description":"PPP 协议","icon":"fas fa-ethernet","author":"昌霖学长","isOriginal":false,"date":"2024-08-02T00:00:00.000Z","categories":["网络协议"],"tags":["PPP","LCP","NCP","Magic Number","魔术字"],"license":"MIT","sticky":false,"star":false,"article":true,"timeline":true,"head":[["meta",{"property":"og:url","content":"https://shawnlyu1990.github.io/posts/Network/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/2024-08-02-PPP%E5%8D%8F%E8%AE%AE.html"}],["meta",{"property":"og:site_name","content":"昌霖学长的折腾笔记"}],["meta",{"property":"og:title","content":"【转载】PPP 协议"}],["meta",{"property":"og:description","content":"PPP 协议"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://shawnlyu1990.github.io/assets/postsimages/2024-08-02-PPP协议/01-PPP在协议栈中的位置.jpeg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-21T05:02:02.000Z"}],["meta",{"property":"article:author","content":"昌霖学长"}],["meta",{"property":"article:tag","content":"PPP"}],["meta",{"property":"article:tag","content":"LCP"}],["meta",{"property":"article:tag","content":"NCP"}],["meta",{"property":"article:tag","content":"Magic Number"}],["meta",{"property":"article:tag","content":"魔术字"}],["meta",{"property":"article:published_time","content":"2024-08-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-21T05:02:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"【转载】PPP 协议\\",\\"image\\":[\\"https://shawnlyu1990.github.io/assets/postsimages/2024-08-02-PPP协议/01-PPP在协议栈中的位置.jpeg\\",\\"https://shawnlyu1990.github.io/assets/postsimages/2024-08-02-PPP协议/02-PPP帧格式-LCP报文.jpeg\\",\\"https://shawnlyu1990.github.io/assets/postsimages/2024-08-02-PPP协议/02-PPP帧格式-LCP报文.jpeg\\",\\"https://shawnlyu1990.github.io/assets/postsimages/2024-08-02-PPP协议/03-PPP连接建立过程.jpeg\\",\\"https://shawnlyu1990.github.io/assets/postsimages/2024-08-02-PPP协议/04-场景1-LCP协商.jpeg\\",\\"https://shawnlyu1990.github.io/assets/postsimages/2024-08-02-PPP协议/05-场景2-检测链路状态.jpeg\\",\\"https://shawnlyu1990.github.io/assets/postsimages/2024-08-02-PPP协议/06-场景3-关闭连接.jpeg\\",\\"https://shawnlyu1990.github.io/assets/postsimages/2024-08-02-PPP协议/07-场景4-LCP协商超时.jpeg\\",\\"https://shawnlyu1990.github.io/assets/postsimages/2024-08-02-PPP协议/08-场景5-LCP参数不一致重新协商.jpeg\\",\\"https://shawnlyu1990.github.io/assets/postsimages/2024-08-02-PPP协议/09-场景6-LCP参数不识别.jpeg\\",\\"https://shawnlyu1990.github.io/assets/postsimages/2024-08-02-PPP协议/10-PAP验证过程.jpeg\\",\\"https://shawnlyu1990.github.io/assets/postsimages/2024-08-02-PPP协议/11-PAP报文的帧格式.jpeg\\",\\"https://shawnlyu1990.github.io/assets/postsimages/2024-08-02-PPP协议/12-CHAP验证过程.jpeg\\",\\"https://shawnlyu1990.github.io/assets/postsimages/2024-08-02-PPP协议/13-CHAP验证报文帧格式.jpeg\\",\\"https://shawnlyu1990.github.io/assets/postsimages/2024-08-02-PPP协议/14-NCP(IPCP\\",\\"https://shawnlyu1990.github.io/assets/postsimages/2024-08-02-PPP协议/15-NCP(IPCP\\",\\"https://shawnlyu1990.github.io/assets/postsimages/2024-08-02-PPP协议/16-PPP的魔术字校验.jpeg\\",\\"https://shawnlyu1990.github.io/assets/postsimages/2024-08-02-PPP协议/17-PPP协议协商震荡关系图.jpeg\\",\\"https://shawnlyu1990.github.io/assets/postsimages/2024-08-02-PPP协议/18-MP链路.jpeg\\"],\\"datePublished\\":\\"2024-08-02T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-21T05:02:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"昌霖学长\\"}]}"]]},"headers":[{"level":2,"title":"1. PPP 简介","slug":"_1-ppp-简介","link":"#_1-ppp-简介","children":[]},{"level":2,"title":"2. PPP 的特点","slug":"_2-ppp-的特点","link":"#_2-ppp-的特点","children":[]},{"level":2,"title":"3. PPP 的原理","slug":"_3-ppp-的原理","link":"#_3-ppp-的原理","children":[{"level":3,"title":"3.1. 基本架构","slug":"_3-1-基本架构","link":"#_3-1-基本架构","children":[]},{"level":3,"title":"3.2. PPP报文封装的帧格式","slug":"_3-2-ppp报文封装的帧格式","link":"#_3-2-ppp报文封装的帧格式","children":[]},{"level":3,"title":"3.3. LCP报文封装的帧格式","slug":"_3-3-lcp报文封装的帧格式","link":"#_3-3-lcp报文封装的帧格式","children":[]},{"level":3,"title":"3.4. PPP 帧示例","slug":"_3-4-ppp-帧示例","link":"#_3-4-ppp-帧示例","children":[]}]},{"level":2,"title":"4. PPP 连接建立过程","slug":"_4-ppp-连接建立过程","link":"#_4-ppp-连接建立过程","children":[{"level":3,"title":"4.1. Dead阶段（链路不可用阶段）","slug":"_4-1-dead阶段-链路不可用阶段","link":"#_4-1-dead阶段-链路不可用阶段","children":[]},{"level":3,"title":"4.2. Establish阶段（链路建立阶段）","slug":"_4-2-establish阶段-链路建立阶段","link":"#_4-2-establish阶段-链路建立阶段","children":[]},{"level":3,"title":"4.3. Authenticate阶段（验证阶段）","slug":"_4-3-authenticate阶段-验证阶段","link":"#_4-3-authenticate阶段-验证阶段","children":[]},{"level":3,"title":"4.4. Network阶段（网络层协议阶段）","slug":"_4-4-network阶段-网络层协议阶段","link":"#_4-4-network阶段-网络层协议阶段","children":[]},{"level":3,"title":"4.5. Terminate阶段（网络终止阶段）","slug":"_4-5-terminate阶段-网络终止阶段","link":"#_4-5-terminate阶段-网络终止阶段","children":[]}]},{"level":2,"title":"5. PPP 的魔术字校验","slug":"_5-ppp-的魔术字校验","link":"#_5-ppp-的魔术字校验","children":[{"level":3,"title":"5.1. 产生原因","slug":"_5-1-产生原因","link":"#_5-1-产生原因","children":[]},{"level":3,"title":"5.2. 实现原理","slug":"_5-2-实现原理","link":"#_5-2-实现原理","children":[]}]},{"level":2,"title":"6. PPP 协议震荡抑制","slug":"_6-ppp-协议震荡抑制","link":"#_6-ppp-协议震荡抑制","children":[{"level":3,"title":"6.1. 产生原因","slug":"_6-1-产生原因","link":"#_6-1-产生原因","children":[]},{"level":3,"title":"6.2. 实现原理","slug":"_6-2-实现原理","link":"#_6-2-实现原理","children":[]}]},{"level":2,"title":"7. MP（MultiLink PPP）","slug":"_7-mp-multilink-ppp","link":"#_7-mp-multilink-ppp","children":[{"level":3,"title":"7.1. 产生原因","slug":"_7-1-产生原因","link":"#_7-1-产生原因","children":[]},{"level":3,"title":"7.2. 实现方式","slug":"_7-2-实现方式","link":"#_7-2-实现方式","children":[]},{"level":3,"title":"7.3. 协商过程","slug":"_7-3-协商过程","link":"#_7-3-协商过程","children":[]},{"level":3,"title":"7.4. 使用价值","slug":"_7-4-使用价值","link":"#_7-4-使用价值","children":[]},{"level":3,"title":"7.5. MP应用","slug":"_7-5-mp应用","link":"#_7-5-mp应用","children":[]}]},{"level":2,"title":"8. 参考资料","slug":"_8-参考资料","link":"#_8-参考资料","children":[]}],"git":{"createdTime":1724140359000,"updatedTime":1724216522000,"contributors":[{"name":"Shawn Lyu","email":"shawnlyu1990@gmail.com","commits":2}]},"readingTime":{"minutes":38.6,"words":11580},"filePathRelative":"posts/Network/网络协议/数据链路层/2024-08-02-PPP协议.md","localizedDate":"2024年8月2日","excerpt":"","copyright":{"license":"MIT"}}');export{N as comp,w as data};
