import{w as i,z as e,C as t,K as s}from"./app-B5oXpFq9.js";const l={},n=s('<div class="hint-container info"><p class="hint-container-title">相关信息</p><p>本博客系个人学习笔记，内容源自公开出版物及网络资源，如有侵权，请联系删除。</p></div><h2 id="_1-stp-简介" tabindex="-1"><a class="header-anchor" href="#_1-stp-简介"><span>1. STP 简介</span></a></h2><h3 id="_1-1-stp-协议的作用" tabindex="-1"><a class="header-anchor" href="#_1-1-stp-协议的作用"><span>1.1. STP 协议的作用</span></a></h3><p>生成树协议（Spanning Tree Protocol，简称 STP）是一种网络协议，它用于在交换网络中消除数据链路层的环路。在物理上或逻辑上存在多个路径的网络环境中，环路可能会导致数据包不断循环传输，从而耗尽网络资源，导致网络瘫痪。为了防止这种情况发生，STP 通过计算出一个无环的生成树来确保网络中的每个数据帧都能准确地从一个源传输到多个目的地，而不会出现无限循环。</p><h3 id="_1-2-stp-协议的工作原理" tabindex="-1"><a class="header-anchor" href="#_1-2-stp-协议的工作原理"><span>1.2. STP 协议的工作原理</span></a></h3><div class="hint-container tip"><p class="hint-container-title">提示</p><p>因为性能方面的限制等因素，早期的交换机一般只有两个转发端口（如果端口多了，交换的转发速度就会慢得无法接受），所以那时的交换机常常被称为「网桥」，或简称「桥」，在 IEEE 的术语中，「桥」这个术语一直沿用至今，但并不只是指只有两个转发口的交换机了，而是泛指具有任意多端口的交换机。目前，「桥」和「交换机」这两个术语是完全混用的，<strong>本文中也会出现「桥」和「交换机」两个术语混用的情况</strong>。</p></div><p>STP 协议通过在网络中构建一个逻辑拓扑图来实现。在该拓扑图中，每个交换机都有一个优先级值，被称为「桥 ID（Bridge ID）」，用于确定根交换机。STP 协议会选择一个交换机作为根交换机，并根据各个交换机的距离（路径成本）到根交换机的距离来计算最佳路径。通过建立无环树状的拓扑结构，STP 协议将冗余路径上的某些接口进行阻塞，以避免环路产生。</p><p>STP 协议的工作原理是基于以下几个重要的机制：</p><ol><li><p><strong>选举根交换机（Root Bridge）</strong>：网络中的每个交换机都会有一个唯一的「桥 ID（Bridge ID）」，由桥优先级和 MAC 地址组成。当网络启动时，所有交换机都会广播 BPDU（Bridge Protocol Data Units）报文，这些报文包含了交换机自身的「桥 ID」。网络中的其他交换机会比较收到的 BPDU 报文，选择「桥 ID」最小的交换机作为根交换机（根桥）。根交换机（根桥）是生成树的参考点，所有数据传输都将以根交换机（根桥）为起点进行。</p></li><li><p><strong>确定端口角色</strong>：每个交换机（桥）都会计算到达根交换机（根桥）的最佳路径，并据此确定其端口的角色（根端口、指定端口、非指定端口）。</p><ul><li><strong>根端口（Root Port）</strong>： 每个非根桥将选择一条到达根桥的最佳路径，这条路径上的端口被选举为根端口。</li><li><strong>指定端口（Designated Port）</strong>： 在每条物理链路（两个交换机之间）上选举指定端口，到达根桥开销最小的端口将成为指定端口。</li><li><strong>非指定端口（Non-Designated Port）</strong>： 除了根端口和指定端口外的其他端口，这些端口将被阻塞，不参与数据转发。</li></ul></li><li><p><strong>BPDU（Bridge Protocol Data Units）报文交换</strong>：BPDU 是 STP 协议中交换的消息单位，包含了交换机的信息，比如「桥 ID（Bridge ID）」、「路径成本」、「端口 ID（Port ID）」 等。通过 BPDU 报文交换，交换机可以计算出根交换机和最佳路径。BPDU 报文周期性的在交换机之间发送，用于维护和更新生成树的状态。</p></li><li><p><strong>端口状态转换</strong>：为了确保无环的拓扑结构，STP 将端口配置为不同的状态。这些状态包括：禁用、监听、学习、转发和阻塞。阻塞状态是关键，它阻止了某些端口参与数据转发，从而消除了环路。</p><ul><li><strong>禁用（Disabled）</strong>： 端口初始状态，不参与任何活动。</li><li><strong>监听（Listening）</strong>： 端口开始接收并处理BPDU，但不转发数据帧。</li><li><strong>学习（Learning）</strong>： 端口学习网络中的MAC地址，但不转发数据帧。</li><li><strong>转发（Forwarding）</strong>： 端口正常转发数据帧。</li><li><strong>阻塞（Blocking）</strong>： 端口接收BPDU但不学习MAC地址，也不转发数据帧。</li></ul></li></ol><p>STP 的工作原理是一个动态的过程，它通过选举根交换机（根桥）、确定端口角色、BPDU报文交换和端口状态转换等一系列操作，确保了网络中不存在环路，同时保持了网络的冗余性和可靠性。这一机制使得 STP 成为以太网交换网络中不可或缺的协议之一，它为网络的稳定运行提供了重要保障。</p><h2 id="_2-stp协议的安全风险" tabindex="-1"><a class="header-anchor" href="#_2-stp协议的安全风险"><span>2. STP协议的安全风险</span></a></h2><p>虽然 STP 是为了提高网络的可靠性和稳定性而设计的，但它自身也存在一些安全风险。这些风险可能会被恶意用户利用，对网络造成不利影响。</p><p>STP 协议存在以下漏洞，攻击者可能利用这些漏洞来实施攻击：</p><ul><li><p><strong>无效的优先级设置</strong>：STP 协议中的优先级设置是一个非常重要的参数，攻击者通过将其设备的优先级设置为 0 或最高值，从而成为网络中的根桥，进而控制整个网络。</p></li><li><p><strong>缺乏认证机制</strong>：STP 协议在默认配置下没有认证机制，攻击者可以轻松伪造 BPDU 信息，影响网络拓扑计算和数据传输。</p></li><li><p><strong>未经授权的设备加入</strong>：STP 协议默认情况下允许任何设备加入网络，攻击者可以通过在网络中插入未经授权的设备，从而拦截、修改或阻止网络中的通信。</p></li><li><p><strong>未加密的数据传输</strong>：STP 协议中的数据传输是明文的，攻击者可以窃听或篡改网络中的数据，严重威胁网络安全。</p></li></ul><h2 id="_3-针对-stp-协议的攻击类型" tabindex="-1"><a class="header-anchor" href="#_3-针对-stp-协议的攻击类型"><span>3. 针对 STP 协议的攻击类型</span></a></h2><p>STP 协议的攻击类型主要包括以下几种：</p><ul><li><p><strong>根桥欺骗攻击</strong>：攻击者伪造 BPDU 信息，将自己的设备优先级设置为网络中的根桥，从而控制整个网络的拓扑计算和数据传输。也被称为「BPDU 欺骗攻击」、「STP 欺骗攻击」、「抢根攻击」等。</p></li><li><p><strong>BPDU 泛洪攻击</strong>：攻击者向网络发送大量的BPDU报文，导致交换机不断重新计算生成树，从而消耗网络资源，引发网络中断。也被称为「生成树重计算攻击」、「STP 泛洪攻击」、「STP 拒绝服务攻击」等。</p></li></ul><h3 id="_3-1-根桥欺骗攻击" tabindex="-1"><a class="header-anchor" href="#_3-1-根桥欺骗攻击"><span>3.1. 根桥欺骗攻击</span></a></h3><p>根桥欺骗攻击的基本原理是让自己控制的交换机成为网络中的根桥，从而控制整个网络的拓扑结构和数据流。</p><p>攻击步骤如下：</p><ol><li><p><strong>监听网络</strong>：攻击者首先需要监听网络中的 BPDU 报文，以了解当前网络中的根桥信息。</p></li><li><p><strong>伪造 BPDU 报文</strong>：攻击者随后会伪造 BPDU 报文，将这些报文的「桥 ID」设置为比当前根桥更小的值。通常，攻击者会将桥优先级设置为比默认值更小的数值，如果桥优先级相同，则比较 MAC 地址，攻击者会选择一个更小的 MAC 地址。</p></li><li><p><strong>发送伪造的BPDU报文</strong>：攻击者将伪造的 BPDU 报文发送到网络中。由于这些 BPDU 报文的「桥 ID」更小，根据 STP 的选举规则，网络中的其他交换机会认为攻击者的交换机应该是新的根桥。</p></li><li><p><strong>拓扑重新计算</strong>：当网络中的交换机收到伪造的 BPDU 报文后，它们会根据 STP 算法重新计算生成树，将攻击者的交换机作为新的根桥，并相应地调整端口状态（如将某些端口从转发状态变为阻塞状态）。</p></li></ol><p>攻击者一旦通过此方法攻击成功，可能会对网络造成以下危害。</p><ul><li>一旦攻击者的交换机被选举为根桥，所有网络流量都将通过这台交换机，攻击者可以监控、修改或丢弃这些流量。</li><li>重新计算生成树可能导致网络中的某些端口状态改变，从而引起短暂的或持续的网络中断。</li><li>攻击者可以捕获和分析通过其设备的流量，可能会窃取敏感信息。</li></ul><h3 id="_3-2-bpdu-泛洪攻击" tabindex="-1"><a class="header-anchor" href="#_3-2-bpdu-泛洪攻击"><span>3.2. BPDU 泛洪攻击</span></a></h3><p>BPDU 泛洪攻击是一种针对 STP 网络的攻击手段，其目的是通过大量的 BPDU（Bridge Protocol Data Units）报文，不断触发生成树的重新计算，使网络中的交换机资源耗尽，从而导致网络服务中断。</p><p>攻击步骤如下：</p><ol><li><p><strong>监听网络</strong>：攻击者首先需要监听网络中的 BPDU 报文，以了解当前网络中的根桥信息。</p></li><li><p><strong>伪造BPDU报文</strong>：攻击者接着伪造大量的 BPDU 报文。这些报文可能具有不同的「桥ID（Bridge ID）」，或者故意设置一些字段以触发 STP 的特定行为。如果攻击者伪造的 BPDU 报文中具有更高优先级（更小的「桥 ID」），那么便会触发生成树的重计算。</p></li><li><p><strong>周期性大量发送伪造的 BPDU 报文</strong>：攻击者周期性地在网络中广播伪造的BPDU报文，使得网络中的交换机接收并处理这些报文。由于攻击者发送的 BPDU 报文中的「桥 ID」是随机生成的，那么交换机一旦收到一个比当前「桥 ID」更小的 BPDU 报文就会认为网络中存在一个更高优先级的桥，便会重新计算生成树。而这类报文是不断的随机发送，交换机需要不断的处理 BPDU 报文，来决定忽略报文内容还是重新计算生成树。</p></li><li><p><strong>消耗交换机资源，触发生成树重新计算</strong>：当交换机接收到伪造的BPDU报文后，它们会根据STP算法比较 BPDU 报文中的内容和本地的内容，来选择丢弃报文还是重新计算生成树。重新计算生成树这个过程包括选举新的根桥、根端口、指定端口和非指定端口，以及相应的端口状态转换。如果根桥 ID 不断变化的话，甚至会导致生成树计算持续进行，从而使生成树无法收敛。</p></li></ol><p>攻击者一旦通过此方法攻击网络，可能会对网络造成以下危害。</p><ul><li><strong>资源耗尽</strong>： 生成树的频繁重新计算会消耗大量的 CPU 和内存资源，可能导致交换机性能下降或暂时不可用。</li><li><strong>网络中断</strong>： 端口状态的频繁变化可能导致网络中的数据流中断，影响正常的网络服务。</li><li><strong>服务拒绝</strong>： 在极端情况下，持续的攻击可能导致交换机重启或完全停止工作，实现拒绝服务攻击的效果。</li></ul><h2 id="_4-stp-安全防护措施" tabindex="-1"><a class="header-anchor" href="#_4-stp-安全防护措施"><span>4. STP 安全防护措施</span></a></h2><h3 id="_4-1-边缘端口和-bpdu-过滤" tabindex="-1"><a class="header-anchor" href="#_4-1-边缘端口和-bpdu-过滤"><span>4.1. 边缘端口和 BPDU 过滤</span></a></h3><p>交换机用户侧设备（如服务器、用户终端等）不需运行 STP 协议。若连接这些设备的交换机端口使能了 STP，那么端口状态在 Up/Down 上不停跳转，或 STP 拓扑变化时端口需要一段时间才能进入转发状态，这对某些业务是不可接受的。为了避免上述问题，需要把连接不需要运行 STP 协议设备的端口配置为边缘端口。边缘端口状态变为 Up 后可以快速进入转发状态，并且不会发送 TC 报文，也不会对运行了 STP 协议的网络造成影响。</p><p>边缘端口直接和用户终端相连，正常情况下，边缘端口不会收到 BPDU 报文。如果攻击者伪造 BPDU 恶意攻击交换机，当边缘端口接收到 BPDU 报文时，交换机会自动将边缘端口设置为非边缘端口，并重新进行生成树计算，从而引起网络震荡。因此可以配置边缘端口的BPDU报文过滤功能，使边缘端口不处理、不发送BPDU报文。</p><p>以华为交换机为例，请在交换机上进行以下配置。</p><ul><li><p>在全局下配置：</p><ul><li><p>进入系统视图。</p><div class="language-shellsession line-numbers-mode" data-highlighter="shiki" data-ext="shellsession" data-title="Huawei VRP Console" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">system-view</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>配置设备上所有端口为边缘端口。</p><div class="language-shellsession line-numbers-mode" data-highlighter="shiki" data-ext="shellsession" data-title="Huawei VRP Console" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">stp edged-port default</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>缺省情况下，设备的所有端口为非边缘端口。</p></div></li><li><p>配置设备上所有端口为 BPDU filter 端口。</p><div class="language-shellsession line-numbers-mode" data-highlighter="shiki" data-ext="shellsession" data-title="Huawei VRP Console" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">stp bpdu-filter default</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>缺省情况下，设备的所有端口为非BPDU filter端口。</p></div></li></ul></li><li><p>在接口下配置：</p><ul><li><p>进入系统视图。</p><div class="language-shellsession line-numbers-mode" data-highlighter="shiki" data-ext="shellsession" data-title="Huawei VRP Console" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">system-view</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>进入接口视图。</p><div class="language-shellsession line-numbers-mode" data-highlighter="shiki" data-ext="shellsession" data-title="Huawei VRP Console" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">interface &lt;interface-type&gt; &lt;interface-number&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>将接口从三层模式切换到二层模式。</p><div class="language-shellsession line-numbers-mode" data-highlighter="shiki" data-ext="shellsession" data-title="Huawei VRP Console" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">portswitch</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>请用户根据实际接口类型自行选择是否要执行此步骤。</p></div></li><li><p>配置端口为边缘端口。</p><div class="language-shellsession line-numbers-mode" data-highlighter="shiki" data-ext="shellsession" data-title="Huawei VRP Console" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">stp edged-port enable</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>缺省情况下，设备的所有端口为非边缘端口。</p></div></li><li><p>配置端口为BPDU filter端口。</p><div class="language-shellsession line-numbers-mode" data-highlighter="shiki" data-ext="shellsession" data-title="Huawei VRP Console" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">stp bpdu-filter enable</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>缺省情况下，设备的所有端口为非 BPDU filter 端口。</p></div></li></ul></li></ul><h3 id="_4-2-bpdu-保护功能" tabindex="-1"><a class="header-anchor" href="#_4-2-bpdu-保护功能"><span>4.2. BPDU 保护功能</span></a></h3><p>边缘端口直接和用户终端相连，正常情况下，边缘端口不会收到BPDU报文。如果攻击者伪造BPDU恶意攻击交换机，当边缘端口接收到BPDU报文时，交换机会自动将边缘端口设置为非边缘端口，并重新进行生成树计算，从而引起网络震荡。</p><p>通过配置BPDU保护功能可以防止这种攻击。设备上使能了BPDU保护功能后，如果边缘端口收到BPDU，系统就将这些端口Shutdown。</p><p>以华为交换机为例，请在有边缘端口的交换机上进行以下配置。</p><ul><li>执行命令 <code>system-view</code>，进入系统视图。</li><li>执行命令 <code>stp bpdu-protection</code>，配置交换机的BPDU保护功能。</li></ul><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>缺省情况下，交换机的 BPDU 保护功能处于去使能状态。</p></div><h3 id="_4-3-tc-保护功能" tabindex="-1"><a class="header-anchor" href="#_4-3-tc-保护功能"><span>4.3. TC 保护功能</span></a></h3><p>如果攻击者伪造拓扑变化 BPDU 报文恶意攻击交换机，交换机短时间内会收到很多拓扑变化 BPDU 报文，频繁的删除操作会给设备造成很大的负担，也给网络的稳定带来很大隐患。</p><p>启用 TC 保护功能后，在指定时间内，交换机处理拓扑变化报文的次数可配置。如果在单位时间内，交换机在收到拓扑变化报文数量大于配置的阈值，那么设备只会处理阈值指定的次数。对于其他超出阈值的拓扑变化报文，定时器到期后设备只对其统一处理一次。例如，时间设定为 10 秒，阈值设定为 5，则设备收到拓扑变化报文后，在 10 秒内只会处理最开始收到的 5 个拓扑变化报文，对于后面收到的报文则会等 10 秒超时后再统一处理。这样可以避免频繁的删除 MAC 地址表项和 ARP 表项，从而达到保护设备的目的。</p><p>以华为交换机为例，请在交换机上进行以下配置。</p><ul><li><p>执行命令 <code>system-view</code>，进入系统视图。</p></li><li><p>配置 TC 保护功能的参数，请选择执行其中一个或多个：</p><ul><li>执行命令 <code>stp tc-protection interval &lt;interval-value&gt;</code>，配置交换机处理指定阈值数的拓扑变化报文所需的时间。<div class="hint-container info"><p class="hint-container-title">相关信息</p><p>缺省情况下，交换机处理指定阈值的拓扑变化报文所需的时间是 10 秒。\\</p></div></li><li>执行命令 <code>stp tc-protection threshold &lt;threshold&gt;</code>，配置交换机在设定时间内处理拓扑变化报文的阈值。<div class="hint-container info"><p class="hint-container-title">相关信息</p><p>缺省情况下，交换机单位时间内处理拓扑变化报文并立即刷新转发表项的缺省值是 1。</p></div></li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><p>在 <code>stp tc-protection interval</code> 指定的时间内，设备只会处理 <code>stp tc-protection threshold</code> 指定的数量的拓扑变化报文，对于其他的报文会延迟处理，所以可能会影响生成树的收敛速度。</p></div></li></ul><h3 id="_4-4-指定端口的-root-保护功能" tabindex="-1"><a class="header-anchor" href="#_4-4-指定端口的-root-保护功能"><span>4.4. 指定端口的 ROOT 保护功能</span></a></h3><p>由于维护人员的错误配置或网络中的恶意攻击，网络中的合法根交换机有可能会收到优先级更高的BPDU报文，使得合法根交换机失去根交换机的地位，引起网络拓扑结构的错误变动。这种不合法的拓扑变化，可能会导致原来应该通过高速链路的流量被牵引到低速链路上，造成网络拥塞。为了防止这种情况发生，可在交换机上部署Root保护功能，通过维持指定端口的角色来保护根交换机的地位。</p><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>Root 保护是指定端口上的特性。当端口的角色是指定端口时，配置的 Root 保护功能才生效。若在其他类型的端口上配置 Root 保护功能，Root 保护功能不会生效。</p></div><p>以华为交换机为例，请在<strong>根交换机</strong>上进行以下配置。</p><ul><li>执行命令 <code>system-view</code>，进入系统视图。</li><li>执行命令 <code>interface &lt;interface-type&gt; &lt;interface-number&gt;</code>，进入以太网接口视图。</li><li>执行命令 <code>stp root-protection</code>，配置交换机的 Root 保护功能。(缺省情况下，端口的 Root 保护功能处于去使能状态。)</li></ul><h3 id="_4-5-根端口的环路保护功能" tabindex="-1"><a class="header-anchor" href="#_4-5-根端口的环路保护功能"><span>4.5. 根端口的环路保护功能</span></a></h3><p>在运行STP/RSTP/MSTP协议的网络中，根端口和其他阻塞端口状态是依靠不断接收来自上游交换设备的BPDU维持。当由于链路拥塞或者单向链路故障导致这些端口收不到来自上游交换设备的BPDU时，交换设备会重新选择根端口。原先的根端口会转变为指定端口，而原先的阻塞端口会迁移到转发状态，从而造成交换网络中可能产生环路。为了防止以上情况发生，可部署环路保护功能。</p><p>在启动了环路保护功能后，如果根端口或Alternate端口长时间收不到来自上游设备的BPDU报文时，则向网管发出通知信息（此时根端口会进入Discarding状态，角色切换为指定端口），而Alternate端口则会一直保持在阻塞状态（角色也会切换为指定端口），不转发报文，从而不会在网络中形成环路。直到链路不再拥塞或单向链路故障恢复，端口重新收到BPDU报文进行协商，并恢复到链路拥塞或者单向链路故障前的角色和状态。</p><p>以华为交换机为例，请在交换机上进行以下配置。</p><ul><li>执行命令 <code>system-view</code>，进入系统视图。</li><li>执行命令 <code>interface &lt;interface-type&gt; &lt;interface-number&gt;</code>，进入根端口或 Alternate 端口（参与生成树协议计算的接口）接口视图。</li><li>执行命令 <code>stp loop-protection</code>，配置交换设备根端口或 Alternate 端口的环路保护功能。<div class="hint-container info"><p class="hint-container-title">相关信息</p><p>缺省情况下，端口的环路保护功能处于关闭状态。</p></div></li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><p>由于 Alternate 端口是根端口的备份端口，如果交换设备上有 Alternate 端口，需要在根端口和 Alternate 端口上同时配置环路保护。</p></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>配置了Root保护的端口，不可以配置环路保护。</p></div><h2 id="_5-总结" tabindex="-1"><a class="header-anchor" href="#_5-总结"><span>5. 总结</span></a></h2><p>在当今高度互联的网络环境中，STP安全的重要性不言而喻。作为确保网络稳定性和可靠性的关键协议，STP的安全直接关系到整个网络的健康运行。通过本文的探讨，我们深入了解了STP的工作原理、潜在的安全风险以及相应的防护措施。</p><ul><li><p><strong>STP安全的重要性</strong>： STP通过消除网络中的环路，防止了广播风暴和数据包的无限循环，保障了数据传输的效率和可靠性。然而，一旦 STP 遭受攻击，不仅会影响网络的正常运行，还可能导致数据泄露和服务中断，对企业的业务连续性和数据安全构成严重威胁。因此，确保 STP 的安全性是网络管理的重中之重。</p></li><li><p><strong>关注 STP 安全风险</strong>： 网络管理员必须对 STP 可能面临的安全风险保持高度警觉。从 BPDU 泛洪攻击到根桥欺骗，再到生成树重计算攻击，这些风险都需要被认真对待。了解这些攻击的原理和潜在影响是采取有效防护措施的前提。</p></li><li><p><strong>及时采取防护措施</strong>： 面对 STP 安全风险，网络管理员应立即采取一系列防护措施。这包括配置边缘端口和启用 BPDU 过滤功能、启用 BPDU 保护、TC 保护、Root 保护、环路保护等安全功能。同时，定期的监控、日志审查、固件更新和补丁管理也是维护 STP 安全的重要组成部分。</p></li></ul><p>保障STP的安全不仅是技术层面的挑战，更是网络管理策略和意识的体现。作为网络管理员，我们应当持续关注STP的最新动态，不断提升自身的安全防护能力，确保网络环境的安全、稳定和高效。通过正确的配置和维护，我们可以有效地防御 STP 相关的安全威胁。</p><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2><ol><li>《STP 协议的安全性与防护策略：如何防止 STP 协议相关的攻击》<a href="https://www.cnblogs.com/cooper-wang/p/10690368.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/cooper-wang/p/10690368.html</a></li><li>《S1720, S2700, S5700, S6720 V200R011C10 配置指南-以太网交换》<a href="https://support.huawei.com/enterprise/zh/doc/EDOC1000178154/90b57276" target="_blank" rel="noopener noreferrer">https://support.huawei.com/enterprise/zh/doc/EDOC1000178154/90b57276</a></li></ol>',64),a=[n];function r(o,p){return e(),t("div",null,a)}const h=i(l,[["render",r],["__file","2024-07-11-STP协议的安全性与防护策略.html.vue"]]),c=JSON.parse('{"path":"/posts/CyberSecurity/2024-07-11-STP%E5%8D%8F%E8%AE%AE%E7%9A%84%E5%AE%89%E5%85%A8%E6%80%A7%E4%B8%8E%E9%98%B2%E6%8A%A4%E7%AD%96%E7%95%A5.html","title":"STP 协议的安全性与防护策略","lang":"zh-CN","frontmatter":{"title":"STP 协议的安全性与防护策略","shortTitle":"STP 协议的安全性与防护策略","description":"以华为交换机为例浅析 STP 协议的安全性与防护策略","icon":"fas fa-circle-nodes","author":"昌霖学长","isOriginal":true,"date":"2024-07-11T00:00:00.000Z","categories":["网络安全","交换网络安全"],"tags":["网络安全","STP","生成树"],"license":"CC BY-NC 4.0","sticky":false,"star":false,"article":true,"timeline":true,"head":[["meta",{"property":"og:url","content":"https://shawnlyu1990.github.io/posts/CyberSecurity/2024-07-11-STP%E5%8D%8F%E8%AE%AE%E7%9A%84%E5%AE%89%E5%85%A8%E6%80%A7%E4%B8%8E%E9%98%B2%E6%8A%A4%E7%AD%96%E7%95%A5.html"}],["meta",{"property":"og:site_name","content":"昌霖学长的折腾笔记"}],["meta",{"property":"og:title","content":"STP 协议的安全性与防护策略"}],["meta",{"property":"og:description","content":"以华为交换机为例浅析 STP 协议的安全性与防护策略"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-21T05:02:02.000Z"}],["meta",{"property":"article:author","content":"昌霖学长"}],["meta",{"property":"article:tag","content":"网络安全"}],["meta",{"property":"article:tag","content":"STP"}],["meta",{"property":"article:tag","content":"生成树"}],["meta",{"property":"article:published_time","content":"2024-07-11T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-21T05:02:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"STP 协议的安全性与防护策略\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-07-11T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-21T05:02:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"昌霖学长\\"}]}"]]},"headers":[{"level":2,"title":"1. STP 简介","slug":"_1-stp-简介","link":"#_1-stp-简介","children":[{"level":3,"title":"1.1. STP 协议的作用","slug":"_1-1-stp-协议的作用","link":"#_1-1-stp-协议的作用","children":[]},{"level":3,"title":"1.2. STP 协议的工作原理","slug":"_1-2-stp-协议的工作原理","link":"#_1-2-stp-协议的工作原理","children":[]}]},{"level":2,"title":"2. STP协议的安全风险","slug":"_2-stp协议的安全风险","link":"#_2-stp协议的安全风险","children":[]},{"level":2,"title":"3. 针对 STP 协议的攻击类型","slug":"_3-针对-stp-协议的攻击类型","link":"#_3-针对-stp-协议的攻击类型","children":[{"level":3,"title":"3.1. 根桥欺骗攻击","slug":"_3-1-根桥欺骗攻击","link":"#_3-1-根桥欺骗攻击","children":[]},{"level":3,"title":"3.2. BPDU 泛洪攻击","slug":"_3-2-bpdu-泛洪攻击","link":"#_3-2-bpdu-泛洪攻击","children":[]}]},{"level":2,"title":"4. STP 安全防护措施","slug":"_4-stp-安全防护措施","link":"#_4-stp-安全防护措施","children":[{"level":3,"title":"4.1. 边缘端口和 BPDU 过滤","slug":"_4-1-边缘端口和-bpdu-过滤","link":"#_4-1-边缘端口和-bpdu-过滤","children":[]},{"level":3,"title":"4.2. BPDU 保护功能","slug":"_4-2-bpdu-保护功能","link":"#_4-2-bpdu-保护功能","children":[]},{"level":3,"title":"4.3. TC 保护功能","slug":"_4-3-tc-保护功能","link":"#_4-3-tc-保护功能","children":[]},{"level":3,"title":"4.4. 指定端口的 ROOT 保护功能","slug":"_4-4-指定端口的-root-保护功能","link":"#_4-4-指定端口的-root-保护功能","children":[]},{"level":3,"title":"4.5. 根端口的环路保护功能","slug":"_4-5-根端口的环路保护功能","link":"#_4-5-根端口的环路保护功能","children":[]}]},{"level":2,"title":"5. 总结","slug":"_5-总结","link":"#_5-总结","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1723779818000,"updatedTime":1724216522000,"contributors":[{"name":"Shawn Lyu","email":"shawnlyu1990@gmail.com","commits":2}]},"readingTime":{"minutes":19.62,"words":5886},"filePathRelative":"posts/CyberSecurity/2024-07-11-STP协议的安全性与防护策略.md","localizedDate":"2024年7月11日","excerpt":"","copyright":{"license":"CC BY-NC 4.0"}}');export{h as comp,c as data};
