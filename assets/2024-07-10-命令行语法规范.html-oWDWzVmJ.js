import{w as e,z as i,C as t,K as a}from"./app-BYr5qDl1.js";const s={},n=a(`<div class="hint-container important"><p class="hint-container-title">重要</p><p>本博客系个人学习笔记，内容源自公开出版物及网络资源，如有侵权，请通过左下角 ✉️ 联系删除。</p></div><h2 id="posix-语法" tabindex="-1"><a class="header-anchor" href="#posix-语法"><span>POSIX 语法</span></a></h2><p>POSIX(Protable Operating System Interface, 可移植操作系统接口)是一种标准，最后一个字母 X 表明其对 Unix API 的传承。Linux 基本逐步实现了 POSIX 兼容，可以简单理解为在 Linux 命令行执行应用程序的语法基本会遵循这个标准（或者说要求开发者遵循这些标准）。</p><p>其中，POSIX.1-2017 描述了命令行选项的参数语法：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">utility_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [-a] [-b] [-c option_argument]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  [-d | </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] [-f [option_argument]] [operand...]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>基本结构为 utility_name（命令名）+ options（选项）+ option-arguments（参数）+ operands（操作数）</p><ul><li><p><code>-</code> 或者 <code>--</code> 后边会跟实际的参数名称。写法上 <code>-</code> 后边跟单词缩写（通常是首字母缩写），<code>--</code> 后面跟完整的单词。</p><p>例如：最常用的<code>git -h</code> 和 <code>git --help</code> 是一个意思，<code>git -v</code> 和 <code>git --version</code>也是一个意思。</p></li><li><p><code>[]</code> 表示选项或者参数是可选的，上面示例中的 <code>[-f [ option_argument ] ]</code> 就表示在命令行中可以带 <code>-f</code> 选项，也可以带 <code>-f some_argument</code> 参数，也可以不带这个选项。不过 POSIX 标准中不推荐参数可选。</p><p>例如：Linux 最常用的 <code>ls</code> 命令可以单独使用，也可以跟 <code>ls -l</code> 选项，其中的 <code>-l</code> 就属于可选选项。</p></li><li><p><code>|</code> 表示两侧的选项任选其一。如果同时写了两个互斥参数会产生难以预期的结果。</p></li><li><p><code>&lt;&gt;</code> 表示需要用实际值替换的参数名称。</p><p>例如：<code>git push</code> 中有 <code>[--repo=&lt;repository&gt;]</code>这个参数，repository 就需要用实际仓库名称替换掉。</p></li><li><p><code>...</code> 表示表示该参数可以多次重复。</p><p>例如：cat 语法中 <code>cat [-belnstuv] [file ...]</code>，最后的 <code>file ...</code> 代表可以跟多个文件，中间用空格隔开。如 <code>cat a.txt b.txt</code>。</p></li><li><p>选项的顺序基本无关紧要，原则上是字典顺序排列。</p></li></ul><h2 id="其他常见用法" tabindex="-1"><a class="header-anchor" href="#其他常见用法"><span>其他常见用法</span></a></h2><p>除了 POSIX 中给出的规范用法以外，还有一些我们经常会见到的用法。在这里记录如下。</p><ul><li><p><code>{}</code> 必选参数，表示括号内的参数必须任选其一，通常和 <code>｜</code> 合并使用。比较少见。</p><p>例如：crontab 语法中就有这样的用法，<code>crontab [ -u user ] { -l | -r | -e }</code>，代表在执行 <code>crontab</code> 命令时，后面必须跟 <code>-l</code>、<code>-e</code>、<code>-r</code> 任意一个参数</p></li><li><p><code>()</code> 只在大括号中使用，代表可选参数的默认值。未广泛使用，比较少见。</p><p>例如：<code>command { (-a) | -b | -c }</code>，代表默认添加 <code>-a</code> 参数，当我们执行 <code>command</code> 命令的时候，相当于执行 <code>command -a</code> 命令。这种用法比较少见，在 Linux Bash 中通常使用 Alias 功能替代此用法了。</p></li><li><p>如果最后的参数没有括号包裹， 则是必填参数。</p><p>例如：which 语法中 <code>which [-as] args</code>，最后的 <code>args</code> 没有被任何括号包裹，那么代表这个参数是必须的。</p></li><li><p>反斜杠<code>\\</code>，用于在文档或者命令行中表示换行，但实际使用时不换行</p><p>例如：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wweb</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">--publish </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-p </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">publicName</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">上述写法与</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wweb</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --publish</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> publicName</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 等价</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><ol><li><p>《命令行选项标准》<a href="https://imbant.github.io/blog/2020/05/08/%E5%91%BD%E4%BB%A4%E8%A1%8C%E9%80%89%E9%A1%B9%E6%A0%87%E5%87%86/" target="_blank" rel="noopener noreferrer">https://imbant.github.io/blog/2020/05/08/命令行选项标准/</a></p></li><li><p>《IEEE Std 1003.1-2017 - 12.1 Utility Argument Syntax》<a href="https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap12.html#tag_12_01" target="_blank" rel="noopener noreferrer">https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap12.html#tag_12_01</a></p></li><li><p>《命令行语法格式》<a href="https://juejin.cn/post/7161314659675406366" target="_blank" rel="noopener noreferrer">https://juejin.cn/post/7161314659675406366</a></p></li></ol>`,12),o=[n];function l(p,c){return i(),t("div",null,o)}const d=e(s,[["render",l],["__file","2024-07-10-命令行语法规范.html.vue"]]),h=JSON.parse('{"path":"/posts/Blogs/Linux/%E6%A0%87%E5%87%86%E8%A7%84%E8%8C%83/2024-07-10-%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%AF%AD%E6%B3%95%E8%A7%84%E8%8C%83.html","title":"命令行语法和参数规范","lang":"zh-CN","frontmatter":{"title":"命令行语法和参数规范","shortTitle":"命令行语法和参数规范","description":"在描述命令行参数的时候，对其格式有些约定俗成的写法，各系统之间也有差别。这里整理一下 POSIX 官方给出的语法和参数的书写规范，对后面其他文章编写时给出指导和参考。","icon":"Rule","author":"昌霖学长","isOriginal":false,"date":"2024-07-10T00:00:00.000Z","categories":["Linux","标准规范"],"tags":["命令行","语法","标准","规范","终端"],"license":"MIT","sticky":false,"star":false,"article":true,"timeline":true,"comment":false,"head":[["meta",{"property":"og:url","content":"https://shawnlyu1990.github.io/posts/Blogs/Linux/%E6%A0%87%E5%87%86%E8%A7%84%E8%8C%83/2024-07-10-%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%AF%AD%E6%B3%95%E8%A7%84%E8%8C%83.html"}],["meta",{"property":"og:site_name","content":"知识杂货铺"}],["meta",{"property":"og:title","content":"命令行语法和参数规范"}],["meta",{"property":"og:description","content":"在描述命令行参数的时候，对其格式有些约定俗成的写法，各系统之间也有差别。这里整理一下 POSIX 官方给出的语法和参数的书写规范，对后面其他文章编写时给出指导和参考。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-31T03:39:29.000Z"}],["meta",{"property":"article:author","content":"昌霖学长"}],["meta",{"property":"article:tag","content":"命令行"}],["meta",{"property":"article:tag","content":"语法"}],["meta",{"property":"article:tag","content":"标准"}],["meta",{"property":"article:tag","content":"规范"}],["meta",{"property":"article:tag","content":"终端"}],["meta",{"property":"article:published_time","content":"2024-07-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-31T03:39:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"命令行语法和参数规范\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-07-10T00:00:00.000Z\\",\\"dateModified\\":\\"2024-12-31T03:39:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"昌霖学长\\"}]}"]]},"headers":[{"level":2,"title":"POSIX 语法","slug":"posix-语法","link":"#posix-语法","children":[]},{"level":2,"title":"其他常见用法","slug":"其他常见用法","link":"#其他常见用法","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1723779818000,"updatedTime":1735616369000,"contributors":[{"name":"Shawn Lyu","email":"shawnlyu1990@gmail.com","commits":1}]},"readingTime":{"minutes":3.93,"words":1179},"filePathRelative":"posts/Blogs/Linux/标准规范/2024-07-10-命令行语法规范.md","localizedDate":"2024年7月10日","excerpt":"","copyright":{"license":"MIT"}}');export{d as comp,h as data};
